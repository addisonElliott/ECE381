ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PS2_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PS2_Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PS2_Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PS2_Timer_Enable, %function
  24              	PS2_Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PS2_Timer.c"
   1:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PS2_Timer.c **** * File Name: PS2_Timer.c
   3:.\Generated_Source\PSoC5/PS2_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/PS2_Timer.c **** *
   5:.\Generated_Source\PSoC5/PS2_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/PS2_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/PS2_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/PS2_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/PS2_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/PS2_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/PS2_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  15:.\Generated_Source\PSoC5/PS2_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  17:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/PS2_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PS2_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PS2_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PS2_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  24:.\Generated_Source\PSoC5/PS2_Timer.c **** #include "PS2_Timer.h"
  25:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  26:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  28:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  29:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Init
  31:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 2


  32:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  33:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  36:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  39:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  42:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  45:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(!PS2_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/PS2_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/PS2_Timer.c ****             uint8 PS2_Timer_interruptState;
  48:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  50:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= PS2_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  54:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_CONTROL2 &= ((uint8)(~PS2_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  59:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_CONTROL3 &= ((uint8)(~PS2_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  63:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/PS2_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  69:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/PS2_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  76:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/PS2_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  82:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  84:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL2 |= PS2_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 3


  89:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  90:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 &= ((uint8)(~PS2_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= PS2_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  95:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 &= ((uint8)(~PS2_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= PS2_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  99:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= PS2_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 103:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 105:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 &= ((uint8)(~PS2_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 |= PS2_Timer_SYNC;
 108:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 109:.\Generated_Source\PSoC5/PS2_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 &= ((uint8)(~PS2_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 |= PS2_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 113:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL2 |= PS2_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 117:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_WritePeriod(PS2_Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_WriteCounter(PS2_Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 121:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CAPTURE_COUNT_CTRL |= PS2_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_SetCaptureCount(PS2_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 126:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_SetCaptureMode(PS2_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 131:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/PS2_Timer.c ****                 if (0u == (PS2_Timer_CONTROL & PS2_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/PS2_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/PS2_Timer.c ****                     PS2_Timer_SetTriggerMode(PS2_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/PS2_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 140:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 144:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_STATUS_AUX_CTRL |= PS2_Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 4


 146:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 147:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/PS2_Timer.c ****         CyExitCriticalSection(PS2_Timer_interruptState);
 149:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 150:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/PS2_Timer.c **** 		
 154:.\Generated_Source\PSoC5/PS2_Timer.c **** 		
 155:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_InterruptOnCaptureCount && !PS2_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_SetInterruptCount(PS2_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 159:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 162:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_SetInterruptMode(PS2_Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 164:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 165:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 166:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Enable
 168:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 170:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 173:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 176:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 179:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 182:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_ENABLE |= PS2_Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_STBY_ENABLE |= PS2_Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 188:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED || PS2_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL |= PS2_Timer_CTRL_ENABLE;
  32              		.loc 1 190 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 5


  39              		.align	2
  40              	.L2:
  41 000c 78650040 		.word	1073767800
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	PS2_Timer_Enable, .-PS2_Timer_Enable
  45              		.section	.text.PS2_Timer_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	PS2_Timer_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PS2_Timer_Stop, %function
  51              	PS2_Timer_Stop:
  52              	.LFB3:
 191:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 193:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 194:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 195:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Start
 197:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 199:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/PS2_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/PS2_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 204:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 207:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 210:.\Generated_Source\PSoC5/PS2_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/PS2_Timer.c **** *  PS2_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/PS2_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 214:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 217:.\Generated_Source\PSoC5/PS2_Timer.c ****     if(PS2_Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/PS2_Timer.c ****     {
 219:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_Init();
 220:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 221:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/PS2_Timer.c ****     }
 223:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 224:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_Enable();
 226:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 227:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 228:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 229:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Stop
 231:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 233:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 6


 234:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/PS2_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 237:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 240:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 243:.\Generated_Source\PSoC5/PS2_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/PS2_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 246:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  53              		.loc 1 248 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 249:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(!PS2_Timer_UDB_CONTROL_REG_REMOVED || PS2_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= ((uint8)(~PS2_Timer_CTRL_ENABLE));
  58              		.loc 1 251 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 78650040 		.word	1073767800
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PS2_Timer_Stop, .-PS2_Timer_Stop
  71              		.section	.text.PS2_Timer_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	PS2_Timer_SetInterruptMode
  74              		.thumb
  75              		.thumb_func
  76              		.type	PS2_Timer_SetInterruptMode, %function
  77              	PS2_Timer_SetInterruptMode:
  78              	.LFB4:
 252:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 254:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_ENABLE &= ((uint8)(~PS2_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~PS2_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 260:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 261:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 262:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 7


 265:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 266:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/PS2_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 271:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/PS2_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/PS2_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 275:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 278:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  79              		.loc 1 280 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 281:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_STATUS_MASK = interruptMode;
  85              		.loc 1 281 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 88640040 		.word	1073767560
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PS2_Timer_SetInterruptMode, .-PS2_Timer_SetInterruptMode
  96              		.section	.text.PS2_Timer_SoftwareCapture,"ax",%progbits
  97              		.align	2
  98              		.global	PS2_Timer_SoftwareCapture
  99              		.thumb
 100              		.thumb_func
 101              		.type	PS2_Timer_SoftwareCapture, %function
 102              	PS2_Timer_SoftwareCapture:
 103              	.LFB5:
 282:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 283:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 284:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 285:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 289:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 292:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 295:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 8


 297:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 298:.\Generated_Source\PSoC5/PS2_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/PS2_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 301:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 104              		.loc 1 303 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG16(PS2_Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG8(PS2_Timer_COUNTER_LSB_PTR_8BIT);
 109              		.loc 1 308 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 0004 7047     		bx	lr
 113              	.L12:
 114 0006 00BF     		.align	2
 115              	.L11:
 116 0008 08640040 		.word	1073767432
 117              		.cfi_endproc
 118              	.LFE5:
 119              		.size	PS2_Timer_SoftwareCapture, .-PS2_Timer_SoftwareCapture
 120              		.section	.text.PS2_Timer_ReadStatusRegister,"ax",%progbits
 121              		.align	2
 122              		.global	PS2_Timer_ReadStatusRegister
 123              		.thumb
 124              		.thumb_func
 125              		.type	PS2_Timer_ReadStatusRegister, %function
 126              	PS2_Timer_ReadStatusRegister:
 127              	.LFB6:
 309:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif/* (PS2_Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 312:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 313:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 314:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 318:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/PS2_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/PS2_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 323:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 326:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 329:.\Generated_Source\PSoC5/PS2_Timer.c **** * Side Effects:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 9


 330:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 332:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8   PS2_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 128              		.loc 1 334 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/PS2_Timer.c ****     return (PS2_Timer_STATUS);
 133              		.loc 1 335 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 136              		.loc 1 336 0
 137 0004 7047     		bx	lr
 138              	.L15:
 139 0006 00BF     		.align	2
 140              	.L14:
 141 0008 68640040 		.word	1073767528
 142              		.cfi_endproc
 143              	.LFE6:
 144              		.size	PS2_Timer_ReadStatusRegister, .-PS2_Timer_ReadStatusRegister
 145              		.section	.text.PS2_Timer_ReadControlRegister,"ax",%progbits
 146              		.align	2
 147              		.global	PS2_Timer_ReadControlRegister
 148              		.thumb
 149              		.thumb_func
 150              		.type	PS2_Timer_ReadControlRegister, %function
 151              	PS2_Timer_ReadControlRegister:
 152              	.LFB7:
 337:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 338:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 339:.\Generated_Source\PSoC5/PS2_Timer.c **** #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 341:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 342:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 346:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 349:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 352:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 355:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 153              		.loc 1 357 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 10


 157              		@ link register save eliminated.
 358:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/PS2_Timer.c ****         return ((uint8)PS2_Timer_CONTROL);
 158              		.loc 1 359 0
 159 0000 014B     		ldr	r3, .L17
 160 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/PS2_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 161              		.loc 1 363 0
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 00BF     		.align	2
 165              	.L17:
 166 0008 78650040 		.word	1073767800
 167              		.cfi_endproc
 168              	.LFE7:
 169              		.size	PS2_Timer_ReadControlRegister, .-PS2_Timer_ReadControlRegister
 170              		.section	.text.PS2_Timer_WriteControlRegister,"ax",%progbits
 171              		.align	2
 172              		.global	PS2_Timer_WriteControlRegister
 173              		.thumb
 174              		.thumb_func
 175              		.type	PS2_Timer_WriteControlRegister, %function
 176              	PS2_Timer_WriteControlRegister:
 177              	.LFB8:
 364:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 365:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 366:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 370:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 373:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/PS2_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 376:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 378:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 178              		.loc 1 380 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL1:
 381:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL = control;
 184              		.loc 1 382 0
 185 0000 014B     		ldr	r3, .L20
 186 0002 1870     		strb	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L21:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 11


 189 0006 00BF     		.align	2
 190              	.L20:
 191 0008 78650040 		.word	1073767800
 192              		.cfi_endproc
 193              	.LFE8:
 194              		.size	PS2_Timer_WriteControlRegister, .-PS2_Timer_WriteControlRegister
 195              		.section	.text.PS2_Timer_ReadPeriod,"ax",%progbits
 196              		.align	2
 197              		.global	PS2_Timer_ReadPeriod
 198              		.thumb
 199              		.thumb_func
 200              		.type	PS2_Timer_ReadPeriod, %function
 201              	PS2_Timer_ReadPeriod:
 202              	.LFB9:
 383:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/PS2_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 387:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 388:.\Generated_Source\PSoC5/PS2_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 390:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 391:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 395:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 398:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 401:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 404:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 203              		.loc 1 406 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/PS2_Timer.c ****    #if(PS2_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/PS2_Timer.c ****        return ((uint8)CY_GET_REG16(PS2_Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/PS2_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/PS2_Timer.c ****        return (CY_GET_REG8(PS2_Timer_PERIOD_LSB_PTR));
 208              		.loc 1 410 0
 209 0000 014B     		ldr	r3, .L23
 210 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 411:.\Generated_Source\PSoC5/PS2_Timer.c ****    #endif /* (PS2_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 211              		.loc 1 412 0
 212 0004 7047     		bx	lr
 213              	.L24:
 214 0006 00BF     		.align	2
 215              	.L23:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 12


 216 0008 28640040 		.word	1073767464
 217              		.cfi_endproc
 218              	.LFE9:
 219              		.size	PS2_Timer_ReadPeriod, .-PS2_Timer_ReadPeriod
 220              		.section	.text.PS2_Timer_WritePeriod,"ax",%progbits
 221              		.align	2
 222              		.global	PS2_Timer_WritePeriod
 223              		.thumb
 224              		.thumb_func
 225              		.type	PS2_Timer_WritePeriod, %function
 226              	PS2_Timer_WritePeriod:
 227              	.LFB10:
 413:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 414:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 415:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 419:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/PS2_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 423:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/PS2_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/PS2_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 427:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 430:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_WritePeriod(uint8 period) 
 432:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 228              		.loc 1 432 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233              	.LVL2:
 433:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/PS2_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG16(PS2_Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG8(PS2_Timer_PERIOD_LSB_PTR, period);
 234              		.loc 1 437 0
 235 0000 014B     		ldr	r3, .L26
 236 0002 1870     		strb	r0, [r3]
 237 0004 7047     		bx	lr
 238              	.L27:
 239 0006 00BF     		.align	2
 240              	.L26:
 241 0008 28640040 		.word	1073767464
 242              		.cfi_endproc
 243              	.LFE10:
 244              		.size	PS2_Timer_WritePeriod, .-PS2_Timer_WritePeriod
 245              		.section	.text.PS2_Timer_ReadCapture,"ax",%progbits
 246              		.align	2
 247              		.global	PS2_Timer_ReadCapture
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 13


 248              		.thumb
 249              		.thumb_func
 250              		.type	PS2_Timer_ReadCapture, %function
 251              	PS2_Timer_ReadCapture:
 252              	.LFB11:
 438:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 440:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 441:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 442:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 446:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 449:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 451:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 452:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 455:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 253              		.loc 1 457 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/PS2_Timer.c ****    #if(PS2_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/PS2_Timer.c ****        return ((uint8)CY_GET_REG16(PS2_Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/PS2_Timer.c ****    #else
 461:.\Generated_Source\PSoC5/PS2_Timer.c ****        return (CY_GET_REG8(PS2_Timer_CAPTURE_LSB_PTR));
 258              		.loc 1 461 0
 259 0000 014B     		ldr	r3, .L29
 260 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 462:.\Generated_Source\PSoC5/PS2_Timer.c ****    #endif /* (PS2_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 261              		.loc 1 463 0
 262 0004 7047     		bx	lr
 263              	.L30:
 264 0006 00BF     		.align	2
 265              	.L29:
 266 0008 48640040 		.word	1073767496
 267              		.cfi_endproc
 268              	.LFE11:
 269              		.size	PS2_Timer_ReadCapture, .-PS2_Timer_ReadCapture
 270              		.section	.text.PS2_Timer_WriteCounter,"ax",%progbits
 271              		.align	2
 272              		.global	PS2_Timer_WriteCounter
 273              		.thumb
 274              		.thumb_func
 275              		.type	PS2_Timer_WriteCounter, %function
 276              	PS2_Timer_WriteCounter:
 277              	.LFB12:
 464:.\Generated_Source\PSoC5/PS2_Timer.c **** 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 14


 465:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 466:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 470:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 473:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/PS2_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 476:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 479:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_WriteCounter(uint8 counter) 
 481:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 278              		.loc 1 481 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283              	.LVL3:
 482:.\Generated_Source\PSoC5/PS2_Timer.c ****    #if(PS2_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/PS2_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/PS2_Timer.c ****          */
 486:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG16(PS2_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/PS2_Timer.c ****         
 488:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG8(PS2_Timer_COUNTER_LSB_PTR, counter);
 284              		.loc 1 489 0
 285 0000 014B     		ldr	r3, .L32
 286 0002 1870     		strb	r0, [r3]
 287 0004 7047     		bx	lr
 288              	.L33:
 289 0006 00BF     		.align	2
 290              	.L32:
 291 0008 08640040 		.word	1073767432
 292              		.cfi_endproc
 293              	.LFE12:
 294              		.size	PS2_Timer_WriteCounter, .-PS2_Timer_WriteCounter
 295              		.section	.text.PS2_Timer_ReadCounter,"ax",%progbits
 296              		.align	2
 297              		.global	PS2_Timer_ReadCounter
 298              		.thumb
 299              		.thumb_func
 300              		.type	PS2_Timer_ReadCounter, %function
 301              	PS2_Timer_ReadCounter:
 302              	.LFB13:
 490:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 492:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 493:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 494:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 15


 497:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 498:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 501:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 504:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 507:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 303              		.loc 1 509 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG16(PS2_Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG8(PS2_Timer_COUNTER_LSB_PTR_8BIT);
 308              		.loc 1 516 0
 309 0000 024B     		ldr	r3, .L35
 310 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif/* (PS2_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 519:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/PS2_Timer.c ****         return ((uint8)CY_GET_REG16(PS2_Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/PS2_Timer.c ****         return (CY_GET_REG8(PS2_Timer_CAPTURE_LSB_PTR));
 311              		.loc 1 523 0
 312 0004 024B     		ldr	r3, .L35+4
 313 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 524:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (PS2_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 314              		.loc 1 525 0
 315 0008 7047     		bx	lr
 316              	.L36:
 317 000a 00BF     		.align	2
 318              	.L35:
 319 000c 08640040 		.word	1073767432
 320 0010 48640040 		.word	1073767496
 321              		.cfi_endproc
 322              	.LFE13:
 323              		.size	PS2_Timer_ReadCounter, .-PS2_Timer_ReadCounter
 324              		.section	.text.PS2_Timer_ClearFIFO,"ax",%progbits
 325              		.align	2
 326              		.global	PS2_Timer_ClearFIFO
 327              		.thumb
 328              		.thumb_func
 329              		.type	PS2_Timer_ClearFIFO, %function
 330              	PS2_Timer_ClearFIFO:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 16


 331              	.LFB14:
 526:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 527:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 528:.\Generated_Source\PSoC5/PS2_Timer.c **** #if(!PS2_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 530:.\Generated_Source\PSoC5/PS2_Timer.c ****     
 531:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/PS2_Timer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/PS2_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/PS2_Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 536:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 537:.\Generated_Source\PSoC5/PS2_Timer.c **** #if (PS2_Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 539:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 540:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 544:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 547:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/PS2_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/PS2_Timer.c **** *  #define PS2_Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/PS2_Timer.c **** #define PS2_Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/PS2_Timer.c **** #define PS2_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/PS2_Timer.c **** #define PS2_Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/PS2_Timer.c **** #define PS2_Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/PS2_Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/PS2_Timer.c **** *  PS2_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/PS2_Timer.c **** *  PS2_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/PS2_Timer.c **** *  PS2_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/PS2_Timer.c **** *  PS2_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 562:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 564:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 565:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 568:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/PS2_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << PS2_Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/PS2_Timer.c ****     captureMode &= (PS2_Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 572:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= ((uint8)(~PS2_Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 576:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 580:.\Generated_Source\PSoC5/PS2_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/PS2_Timer.c **** 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 17


 582:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 583:.\Generated_Source\PSoC5/PS2_Timer.c **** #if (PS2_Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 585:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 586:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 590:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 593:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/PS2_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/PS2_Timer.c ****     #define PS2_Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/PS2_Timer.c ****     #define PS2_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/PS2_Timer.c ****     #define PS2_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/PS2_Timer.c ****     #define PS2_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/PS2_Timer.c ****     #define PS2_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 601:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 603:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 604:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 607:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/PS2_Timer.c ****     triggerMode &= PS2_Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 610:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 611:.\Generated_Source\PSoC5/PS2_Timer.c ****     
 612:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= ((uint8)(~PS2_Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 615:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL |= (triggerMode | PS2_Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 619:.\Generated_Source\PSoC5/PS2_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 621:.\Generated_Source\PSoC5/PS2_Timer.c **** #if (PS2_Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 623:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 624:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 628:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 631:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 633:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 634:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 636:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 637:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_EnableTrigger(void) 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 18


 639:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 640:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 641:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL |= PS2_Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 644:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 645:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 646:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 650:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 653:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 655:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 656:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 658:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 659:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 662:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed
 663:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= ((uint8)(~PS2_Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 666:.\Generated_Source\PSoC5/PS2_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 668:.\Generated_Source\PSoC5/PS2_Timer.c **** #if(PS2_Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 670:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 671:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 675:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 678:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/PS2_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/PS2_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/PS2_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/PS2_Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 684:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 686:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 687:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 690:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/PS2_Timer.c ****     interruptCount &= PS2_Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 693:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= ((uint8)(~PS2_Timer_CTRL_INTCNT_MASK));
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 19


 696:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 700:.\Generated_Source\PSoC5/PS2_Timer.c **** #endif /* PS2_Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 702:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 703:.\Generated_Source\PSoC5/PS2_Timer.c **** #if (PS2_Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 705:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 706:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 710:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 713:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/PS2_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/PS2_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/PS2_Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 718:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 720:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 721:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 724:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 726:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 727:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 728:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 732:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 735:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 737:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 738:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 741:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 744:.\Generated_Source\PSoC5/PS2_Timer.c ****     return ((uint8)PS2_Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 746:.\Generated_Source\PSoC5/PS2_Timer.c **** #endif /* PS2_Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 748:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 749:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/PS2_Timer.c **** *
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 20


 753:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 756:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 758:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 759:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 761:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 762:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 332              		.loc 1 764 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC5/PS2_Timer.c ****     while(0u != (PS2_Timer_ReadStatusRegister() & PS2_Timer_STATUS_FIFONEMP))
 340              		.loc 1 765 0
 341 0002 01E0     		b	.L38
 342              	.L39:
 766:.\Generated_Source\PSoC5/PS2_Timer.c ****     {
 767:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)PS2_Timer_ReadCapture();
 343              		.loc 1 767 0
 344 0004 FFF7FEFF 		bl	PS2_Timer_ReadCapture
 345              	.LVL4:
 346              	.L38:
 765:.\Generated_Source\PSoC5/PS2_Timer.c ****     while(0u != (PS2_Timer_ReadStatusRegister() & PS2_Timer_STATUS_FIFONEMP))
 347              		.loc 1 765 0
 348 0008 FFF7FEFF 		bl	PS2_Timer_ReadStatusRegister
 349              	.LVL5:
 350 000c 10F0080F 		tst	r0, #8
 351 0010 F8D1     		bne	.L39
 768:.\Generated_Source\PSoC5/PS2_Timer.c ****     }
 769:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 352              		.loc 1 769 0
 353 0012 08BD     		pop	{r3, pc}
 354              		.cfi_endproc
 355              	.LFE14:
 356              		.size	PS2_Timer_ClearFIFO, .-PS2_Timer_ClearFIFO
 357              		.section	.text.PS2_Timer_Init,"ax",%progbits
 358              		.align	2
 359              		.global	PS2_Timer_Init
 360              		.thumb
 361              		.thumb_func
 362              		.type	PS2_Timer_Init, %function
 363              	PS2_Timer_Init:
 364              	.LFB0:
  44:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(!PS2_Timer_UsingFixedFunction)
 365              		.loc 1 44 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 21


 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_WriteCounter(PS2_Timer_INIT_PERIOD);
 373              		.loc 1 118 0
 374 0002 C720     		movs	r0, #199
 375 0004 FFF7FEFF 		bl	PS2_Timer_WritePeriod
 376              	.LVL6:
 119:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 377              		.loc 1 119 0
 378 0008 C720     		movs	r0, #199
 379 000a FFF7FEFF 		bl	PS2_Timer_WriteCounter
 380              	.LVL7:
 142:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 381              		.loc 1 142 0
 382 000e FFF7FEFF 		bl	CyEnterCriticalSection
 383              	.LVL8:
 145:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 384              		.loc 1 145 0
 385 0012 064A     		ldr	r2, .L43
 386 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 387 0016 43F01003 		orr	r3, r3, #16
 388 001a 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 389              		.loc 1 148 0
 390 001c FFF7FEFF 		bl	CyExitCriticalSection
 391              	.LVL9:
 159:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 392              		.loc 1 159 0
 393 0020 FFF7FEFF 		bl	PS2_Timer_ClearFIFO
 394              	.LVL10:
 162:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 395              		.loc 1 162 0
 396 0024 0120     		movs	r0, #1
 397 0026 FFF7FEFF 		bl	PS2_Timer_SetInterruptMode
 398              	.LVL11:
 399 002a 08BD     		pop	{r3, pc}
 400              	.L44:
 401              		.align	2
 402              	.L43:
 403 002c 98640040 		.word	1073767576
 404              		.cfi_endproc
 405              	.LFE0:
 406              		.size	PS2_Timer_Init, .-PS2_Timer_Init
 407              		.section	.text.PS2_Timer_Start,"ax",%progbits
 408              		.align	2
 409              		.global	PS2_Timer_Start
 410              		.thumb
 411              		.thumb_func
 412              		.type	PS2_Timer_Start, %function
 413              	PS2_Timer_Start:
 414              	.LFB2:
 216:.\Generated_Source\PSoC5/PS2_Timer.c ****     if(PS2_Timer_initVar == 0u)
 415              		.loc 1 216 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 22


 419 0000 08B5     		push	{r3, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 3, -8
 422              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/PS2_Timer.c ****     {
 423              		.loc 1 217 0
 424 0002 054B     		ldr	r3, .L48
 425 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 0006 23B9     		cbnz	r3, .L46
 219:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 427              		.loc 1 219 0
 428 0008 FFF7FEFF 		bl	PS2_Timer_Init
 429              	.LVL12:
 221:.\Generated_Source\PSoC5/PS2_Timer.c ****     }
 430              		.loc 1 221 0
 431 000c 0122     		movs	r2, #1
 432 000e 024B     		ldr	r3, .L48
 433 0010 1A70     		strb	r2, [r3]
 434              	.L46:
 225:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 435              		.loc 1 225 0
 436 0012 FFF7FEFF 		bl	PS2_Timer_Enable
 437              	.LVL13:
 438 0016 08BD     		pop	{r3, pc}
 439              	.L49:
 440              		.align	2
 441              	.L48:
 442 0018 00000000 		.word	.LANCHOR0
 443              		.cfi_endproc
 444              	.LFE2:
 445              		.size	PS2_Timer_Start, .-PS2_Timer_Start
 446              		.global	PS2_Timer_initVar
 447              		.bss
 448              		.set	.LANCHOR0,. + 0
 449              		.type	PS2_Timer_initVar, %object
 450              		.size	PS2_Timer_initVar, 1
 451              	PS2_Timer_initVar:
 452 0000 00       		.space	1
 453              		.text
 454              	.Letext0:
 455              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 456              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 457              		.section	.debug_info,"",%progbits
 458              	.Ldebug_info0:
 459 0000 C8020000 		.4byte	0x2c8
 460 0004 0400     		.2byte	0x4
 461 0006 00000000 		.4byte	.Ldebug_abbrev0
 462 000a 04       		.byte	0x4
 463 000b 01       		.uleb128 0x1
 464 000c AA010000 		.4byte	.LASF34
 465 0010 01       		.byte	0x1
 466 0011 10010000 		.4byte	.LASF35
 467 0015 00000000 		.4byte	.LASF36
 468 0019 00000000 		.4byte	.Ldebug_ranges0+0
 469 001d 00000000 		.4byte	0
 470 0021 00000000 		.4byte	.Ldebug_line0
 471 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 23


 472 0026 01       		.byte	0x1
 473 0027 06       		.byte	0x6
 474 0028 0A030000 		.4byte	.LASF0
 475 002c 02       		.uleb128 0x2
 476 002d 01       		.byte	0x1
 477 002e 08       		.byte	0x8
 478 002f C6000000 		.4byte	.LASF1
 479 0033 02       		.uleb128 0x2
 480 0034 02       		.byte	0x2
 481 0035 05       		.byte	0x5
 482 0036 AF020000 		.4byte	.LASF2
 483 003a 02       		.uleb128 0x2
 484 003b 02       		.byte	0x2
 485 003c 07       		.byte	0x7
 486 003d 62000000 		.4byte	.LASF3
 487 0041 02       		.uleb128 0x2
 488 0042 04       		.byte	0x4
 489 0043 05       		.byte	0x5
 490 0044 FC020000 		.4byte	.LASF4
 491 0048 02       		.uleb128 0x2
 492 0049 04       		.byte	0x4
 493 004a 07       		.byte	0x7
 494 004b D9000000 		.4byte	.LASF5
 495 004f 02       		.uleb128 0x2
 496 0050 08       		.byte	0x8
 497 0051 05       		.byte	0x5
 498 0052 84020000 		.4byte	.LASF6
 499 0056 02       		.uleb128 0x2
 500 0057 08       		.byte	0x8
 501 0058 07       		.byte	0x7
 502 0059 AF000000 		.4byte	.LASF7
 503 005d 03       		.uleb128 0x3
 504 005e 04       		.byte	0x4
 505 005f 05       		.byte	0x5
 506 0060 696E7400 		.ascii	"int\000"
 507 0064 02       		.uleb128 0x2
 508 0065 04       		.byte	0x4
 509 0066 07       		.byte	0x7
 510 0067 87010000 		.4byte	.LASF8
 511 006b 04       		.uleb128 0x4
 512 006c EB000000 		.4byte	.LASF12
 513 0070 02       		.byte	0x2
 514 0071 3801     		.2byte	0x138
 515 0073 2C000000 		.4byte	0x2c
 516 0077 02       		.uleb128 0x2
 517 0078 04       		.byte	0x4
 518 0079 04       		.byte	0x4
 519 007a A1000000 		.4byte	.LASF9
 520 007e 02       		.uleb128 0x2
 521 007f 08       		.byte	0x8
 522 0080 04       		.byte	0x4
 523 0081 35010000 		.4byte	.LASF10
 524 0085 02       		.uleb128 0x2
 525 0086 01       		.byte	0x1
 526 0087 08       		.byte	0x8
 527 0088 05030000 		.4byte	.LASF11
 528 008c 04       		.uleb128 0x4
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 24


 529 008d D4000000 		.4byte	.LASF13
 530 0091 02       		.byte	0x2
 531 0092 E201     		.2byte	0x1e2
 532 0094 98000000 		.4byte	0x98
 533 0098 05       		.uleb128 0x5
 534 0099 6B000000 		.4byte	0x6b
 535 009d 02       		.uleb128 0x2
 536 009e 04       		.byte	0x4
 537 009f 07       		.byte	0x7
 538 00a0 7B020000 		.4byte	.LASF14
 539 00a4 06       		.uleb128 0x6
 540 00a5 16030000 		.4byte	.LASF15
 541 00a9 01       		.byte	0x1
 542 00aa B4       		.byte	0xb4
 543 00ab 00000000 		.4byte	.LFB1
 544 00af 10000000 		.4byte	.LFE1-.LFB1
 545 00b3 01       		.uleb128 0x1
 546 00b4 9C       		.byte	0x9c
 547 00b5 06       		.uleb128 0x6
 548 00b6 A0020000 		.4byte	.LASF16
 549 00ba 01       		.byte	0x1
 550 00bb F7       		.byte	0xf7
 551 00bc 00000000 		.4byte	.LFB3
 552 00c0 10000000 		.4byte	.LFE3-.LFB3
 553 00c4 01       		.uleb128 0x1
 554 00c5 9C       		.byte	0x9c
 555 00c6 07       		.uleb128 0x7
 556 00c7 53030000 		.4byte	.LASF20
 557 00cb 01       		.byte	0x1
 558 00cc 1701     		.2byte	0x117
 559 00ce 00000000 		.4byte	.LFB4
 560 00d2 0C000000 		.4byte	.LFE4-.LFB4
 561 00d6 01       		.uleb128 0x1
 562 00d7 9C       		.byte	0x9c
 563 00d8 EB000000 		.4byte	0xeb
 564 00dc 08       		.uleb128 0x8
 565 00dd 92020000 		.4byte	.LASF22
 566 00e1 01       		.byte	0x1
 567 00e2 1701     		.2byte	0x117
 568 00e4 6B000000 		.4byte	0x6b
 569 00e8 01       		.uleb128 0x1
 570 00e9 50       		.byte	0x50
 571 00ea 00       		.byte	0
 572 00eb 09       		.uleb128 0x9
 573 00ec 39030000 		.4byte	.LASF17
 574 00f0 01       		.byte	0x1
 575 00f1 2E01     		.2byte	0x12e
 576 00f3 00000000 		.4byte	.LFB5
 577 00f7 0C000000 		.4byte	.LFE5-.LFB5
 578 00fb 01       		.uleb128 0x1
 579 00fc 9C       		.byte	0x9c
 580 00fd 0A       		.uleb128 0xa
 581 00fe B9020000 		.4byte	.LASF18
 582 0102 01       		.byte	0x1
 583 0103 4D01     		.2byte	0x14d
 584 0105 6B000000 		.4byte	0x6b
 585 0109 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 25


 586 010d 0C000000 		.4byte	.LFE6-.LFB6
 587 0111 01       		.uleb128 0x1
 588 0112 9C       		.byte	0x9c
 589 0113 0A       		.uleb128 0xa
 590 0114 D6020000 		.4byte	.LASF19
 591 0118 01       		.byte	0x1
 592 0119 6401     		.2byte	0x164
 593 011b 6B000000 		.4byte	0x6b
 594 011f 00000000 		.4byte	.LFB7
 595 0123 0C000000 		.4byte	.LFE7-.LFB7
 596 0127 01       		.uleb128 0x1
 597 0128 9C       		.byte	0x9c
 598 0129 07       		.uleb128 0x7
 599 012a F1000000 		.4byte	.LASF21
 600 012e 01       		.byte	0x1
 601 012f 7B01     		.2byte	0x17b
 602 0131 00000000 		.4byte	.LFB8
 603 0135 0C000000 		.4byte	.LFE8-.LFB8
 604 0139 01       		.uleb128 0x1
 605 013a 9C       		.byte	0x9c
 606 013b 4E010000 		.4byte	0x14e
 607 013f 08       		.uleb128 0x8
 608 0140 F4020000 		.4byte	.LASF23
 609 0144 01       		.byte	0x1
 610 0145 7B01     		.2byte	0x17b
 611 0147 6B000000 		.4byte	0x6b
 612 014b 01       		.uleb128 0x1
 613 014c 50       		.byte	0x50
 614 014d 00       		.byte	0
 615 014e 0A       		.uleb128 0xa
 616 014f 5B010000 		.4byte	.LASF24
 617 0153 01       		.byte	0x1
 618 0154 9501     		.2byte	0x195
 619 0156 6B000000 		.4byte	0x6b
 620 015a 00000000 		.4byte	.LFB9
 621 015e 0C000000 		.4byte	.LFE9-.LFB9
 622 0162 01       		.uleb128 0x1
 623 0163 9C       		.byte	0x9c
 624 0164 07       		.uleb128 0x7
 625 0165 75000000 		.4byte	.LASF25
 626 0169 01       		.byte	0x1
 627 016a AF01     		.2byte	0x1af
 628 016c 00000000 		.4byte	.LFB10
 629 0170 0C000000 		.4byte	.LFE10-.LFB10
 630 0174 01       		.uleb128 0x1
 631 0175 9C       		.byte	0x9c
 632 0176 89010000 		.4byte	0x189
 633 017a 08       		.uleb128 0x8
 634 017b 5B000000 		.4byte	.LASF26
 635 017f 01       		.byte	0x1
 636 0180 AF01     		.2byte	0x1af
 637 0182 6B000000 		.4byte	0x6b
 638 0186 01       		.uleb128 0x1
 639 0187 50       		.byte	0x50
 640 0188 00       		.byte	0
 641 0189 0A       		.uleb128 0xa
 642 018a 4C020000 		.4byte	.LASF27
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 26


 643 018e 01       		.byte	0x1
 644 018f C801     		.2byte	0x1c8
 645 0191 6B000000 		.4byte	0x6b
 646 0195 00000000 		.4byte	.LFB11
 647 0199 0C000000 		.4byte	.LFE11-.LFB11
 648 019d 01       		.uleb128 0x1
 649 019e 9C       		.byte	0x9c
 650 019f 07       		.uleb128 0x7
 651 01a0 44000000 		.4byte	.LASF28
 652 01a4 01       		.byte	0x1
 653 01a5 E001     		.2byte	0x1e0
 654 01a7 00000000 		.4byte	.LFB12
 655 01ab 0C000000 		.4byte	.LFE12-.LFB12
 656 01af 01       		.uleb128 0x1
 657 01b0 9C       		.byte	0x9c
 658 01b1 C4010000 		.4byte	0x1c4
 659 01b5 08       		.uleb128 0x8
 660 01b6 A7000000 		.4byte	.LASF29
 661 01ba 01       		.byte	0x1
 662 01bb E001     		.2byte	0x1e0
 663 01bd 6B000000 		.4byte	0x6b
 664 01c1 01       		.uleb128 0x1
 665 01c2 50       		.byte	0x50
 666 01c3 00       		.byte	0
 667 01c4 0A       		.uleb128 0xa
 668 01c5 8B000000 		.4byte	.LASF30
 669 01c9 01       		.byte	0x1
 670 01ca FC01     		.2byte	0x1fc
 671 01cc 6B000000 		.4byte	0x6b
 672 01d0 00000000 		.4byte	.LFB13
 673 01d4 14000000 		.4byte	.LFE13-.LFB13
 674 01d8 01       		.uleb128 0x1
 675 01d9 9C       		.byte	0x9c
 676 01da 07       		.uleb128 0x7
 677 01db 38020000 		.4byte	.LASF31
 678 01df 01       		.byte	0x1
 679 01e0 FB02     		.2byte	0x2fb
 680 01e2 00000000 		.4byte	.LFB14
 681 01e6 14000000 		.4byte	.LFE14-.LFB14
 682 01ea 01       		.uleb128 0x1
 683 01eb 9C       		.byte	0x9c
 684 01ec 03020000 		.4byte	0x203
 685 01f0 0B       		.uleb128 0xb
 686 01f1 08000000 		.4byte	.LVL4
 687 01f5 89010000 		.4byte	0x189
 688 01f9 0B       		.uleb128 0xb
 689 01fa 0C000000 		.4byte	.LVL5
 690 01fe FD000000 		.4byte	0xfd
 691 0202 00       		.byte	0
 692 0203 0C       		.uleb128 0xc
 693 0204 3C010000 		.4byte	.LASF32
 694 0208 01       		.byte	0x1
 695 0209 2B       		.byte	0x2b
 696 020a 00000000 		.4byte	.LFB0
 697 020e 30000000 		.4byte	.LFE0-.LFB0
 698 0212 01       		.uleb128 0x1
 699 0213 9C       		.byte	0x9c
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 27


 700 0214 7A020000 		.4byte	0x27a
 701 0218 0D       		.uleb128 0xd
 702 0219 62020000 		.4byte	.LASF37
 703 021d 01       		.byte	0x1
 704 021e 2F       		.byte	0x2f
 705 021f 6B000000 		.4byte	0x6b
 706 0223 00000000 		.4byte	.LLST0
 707 0227 0E       		.uleb128 0xe
 708 0228 08000000 		.4byte	.LVL6
 709 022c 64010000 		.4byte	0x164
 710 0230 3B020000 		.4byte	0x23b
 711 0234 0F       		.uleb128 0xf
 712 0235 01       		.uleb128 0x1
 713 0236 50       		.byte	0x50
 714 0237 02       		.uleb128 0x2
 715 0238 09       		.byte	0x9
 716 0239 C7       		.byte	0xc7
 717 023a 00       		.byte	0
 718 023b 0E       		.uleb128 0xe
 719 023c 0E000000 		.4byte	.LVL7
 720 0240 9F010000 		.4byte	0x19f
 721 0244 4F020000 		.4byte	0x24f
 722 0248 0F       		.uleb128 0xf
 723 0249 01       		.uleb128 0x1
 724 024a 50       		.byte	0x50
 725 024b 02       		.uleb128 0x2
 726 024c 09       		.byte	0x9
 727 024d C7       		.byte	0xc7
 728 024e 00       		.byte	0
 729 024f 0B       		.uleb128 0xb
 730 0250 12000000 		.4byte	.LVL8
 731 0254 B3020000 		.4byte	0x2b3
 732 0258 0B       		.uleb128 0xb
 733 0259 20000000 		.4byte	.LVL9
 734 025d BE020000 		.4byte	0x2be
 735 0261 0B       		.uleb128 0xb
 736 0262 24000000 		.4byte	.LVL10
 737 0266 DA010000 		.4byte	0x1da
 738 026a 10       		.uleb128 0x10
 739 026b 2A000000 		.4byte	.LVL11
 740 026f C6000000 		.4byte	0xc6
 741 0273 0F       		.uleb128 0xf
 742 0274 01       		.uleb128 0x1
 743 0275 50       		.byte	0x50
 744 0276 01       		.uleb128 0x1
 745 0277 31       		.byte	0x31
 746 0278 00       		.byte	0
 747 0279 00       		.byte	0
 748 027a 0C       		.uleb128 0xc
 749 027b 4B010000 		.4byte	.LASF33
 750 027f 01       		.byte	0x1
 751 0280 D7       		.byte	0xd7
 752 0281 00000000 		.4byte	.LFB2
 753 0285 1C000000 		.4byte	.LFE2-.LFB2
 754 0289 01       		.uleb128 0x1
 755 028a 9C       		.byte	0x9c
 756 028b A2020000 		.4byte	0x2a2
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 28


 757 028f 0B       		.uleb128 0xb
 758 0290 0C000000 		.4byte	.LVL12
 759 0294 03020000 		.4byte	0x203
 760 0298 0B       		.uleb128 0xb
 761 0299 16000000 		.4byte	.LVL13
 762 029d A4000000 		.4byte	0xa4
 763 02a1 00       		.byte	0
 764 02a2 11       		.uleb128 0x11
 765 02a3 27030000 		.4byte	.LASF38
 766 02a7 01       		.byte	0x1
 767 02a8 1A       		.byte	0x1a
 768 02a9 6B000000 		.4byte	0x6b
 769 02ad 05       		.uleb128 0x5
 770 02ae 03       		.byte	0x3
 771 02af 00000000 		.4byte	PS2_Timer_initVar
 772 02b3 12       		.uleb128 0x12
 773 02b4 70010000 		.4byte	.LASF39
 774 02b8 03       		.byte	0x3
 775 02b9 7E       		.byte	0x7e
 776 02ba 6B000000 		.4byte	0x6b
 777 02be 13       		.uleb128 0x13
 778 02bf 94010000 		.4byte	.LASF40
 779 02c3 03       		.byte	0x3
 780 02c4 7F       		.byte	0x7f
 781 02c5 14       		.uleb128 0x14
 782 02c6 6B000000 		.4byte	0x6b
 783 02ca 00       		.byte	0
 784 02cb 00       		.byte	0
 785              		.section	.debug_abbrev,"",%progbits
 786              	.Ldebug_abbrev0:
 787 0000 01       		.uleb128 0x1
 788 0001 11       		.uleb128 0x11
 789 0002 01       		.byte	0x1
 790 0003 25       		.uleb128 0x25
 791 0004 0E       		.uleb128 0xe
 792 0005 13       		.uleb128 0x13
 793 0006 0B       		.uleb128 0xb
 794 0007 03       		.uleb128 0x3
 795 0008 0E       		.uleb128 0xe
 796 0009 1B       		.uleb128 0x1b
 797 000a 0E       		.uleb128 0xe
 798 000b 55       		.uleb128 0x55
 799 000c 17       		.uleb128 0x17
 800 000d 11       		.uleb128 0x11
 801 000e 01       		.uleb128 0x1
 802 000f 10       		.uleb128 0x10
 803 0010 17       		.uleb128 0x17
 804 0011 00       		.byte	0
 805 0012 00       		.byte	0
 806 0013 02       		.uleb128 0x2
 807 0014 24       		.uleb128 0x24
 808 0015 00       		.byte	0
 809 0016 0B       		.uleb128 0xb
 810 0017 0B       		.uleb128 0xb
 811 0018 3E       		.uleb128 0x3e
 812 0019 0B       		.uleb128 0xb
 813 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 29


 814 001b 0E       		.uleb128 0xe
 815 001c 00       		.byte	0
 816 001d 00       		.byte	0
 817 001e 03       		.uleb128 0x3
 818 001f 24       		.uleb128 0x24
 819 0020 00       		.byte	0
 820 0021 0B       		.uleb128 0xb
 821 0022 0B       		.uleb128 0xb
 822 0023 3E       		.uleb128 0x3e
 823 0024 0B       		.uleb128 0xb
 824 0025 03       		.uleb128 0x3
 825 0026 08       		.uleb128 0x8
 826 0027 00       		.byte	0
 827 0028 00       		.byte	0
 828 0029 04       		.uleb128 0x4
 829 002a 16       		.uleb128 0x16
 830 002b 00       		.byte	0
 831 002c 03       		.uleb128 0x3
 832 002d 0E       		.uleb128 0xe
 833 002e 3A       		.uleb128 0x3a
 834 002f 0B       		.uleb128 0xb
 835 0030 3B       		.uleb128 0x3b
 836 0031 05       		.uleb128 0x5
 837 0032 49       		.uleb128 0x49
 838 0033 13       		.uleb128 0x13
 839 0034 00       		.byte	0
 840 0035 00       		.byte	0
 841 0036 05       		.uleb128 0x5
 842 0037 35       		.uleb128 0x35
 843 0038 00       		.byte	0
 844 0039 49       		.uleb128 0x49
 845 003a 13       		.uleb128 0x13
 846 003b 00       		.byte	0
 847 003c 00       		.byte	0
 848 003d 06       		.uleb128 0x6
 849 003e 2E       		.uleb128 0x2e
 850 003f 00       		.byte	0
 851 0040 3F       		.uleb128 0x3f
 852 0041 19       		.uleb128 0x19
 853 0042 03       		.uleb128 0x3
 854 0043 0E       		.uleb128 0xe
 855 0044 3A       		.uleb128 0x3a
 856 0045 0B       		.uleb128 0xb
 857 0046 3B       		.uleb128 0x3b
 858 0047 0B       		.uleb128 0xb
 859 0048 27       		.uleb128 0x27
 860 0049 19       		.uleb128 0x19
 861 004a 11       		.uleb128 0x11
 862 004b 01       		.uleb128 0x1
 863 004c 12       		.uleb128 0x12
 864 004d 06       		.uleb128 0x6
 865 004e 40       		.uleb128 0x40
 866 004f 18       		.uleb128 0x18
 867 0050 9742     		.uleb128 0x2117
 868 0052 19       		.uleb128 0x19
 869 0053 00       		.byte	0
 870 0054 00       		.byte	0
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 30


 871 0055 07       		.uleb128 0x7
 872 0056 2E       		.uleb128 0x2e
 873 0057 01       		.byte	0x1
 874 0058 3F       		.uleb128 0x3f
 875 0059 19       		.uleb128 0x19
 876 005a 03       		.uleb128 0x3
 877 005b 0E       		.uleb128 0xe
 878 005c 3A       		.uleb128 0x3a
 879 005d 0B       		.uleb128 0xb
 880 005e 3B       		.uleb128 0x3b
 881 005f 05       		.uleb128 0x5
 882 0060 27       		.uleb128 0x27
 883 0061 19       		.uleb128 0x19
 884 0062 11       		.uleb128 0x11
 885 0063 01       		.uleb128 0x1
 886 0064 12       		.uleb128 0x12
 887 0065 06       		.uleb128 0x6
 888 0066 40       		.uleb128 0x40
 889 0067 18       		.uleb128 0x18
 890 0068 9742     		.uleb128 0x2117
 891 006a 19       		.uleb128 0x19
 892 006b 01       		.uleb128 0x1
 893 006c 13       		.uleb128 0x13
 894 006d 00       		.byte	0
 895 006e 00       		.byte	0
 896 006f 08       		.uleb128 0x8
 897 0070 05       		.uleb128 0x5
 898 0071 00       		.byte	0
 899 0072 03       		.uleb128 0x3
 900 0073 0E       		.uleb128 0xe
 901 0074 3A       		.uleb128 0x3a
 902 0075 0B       		.uleb128 0xb
 903 0076 3B       		.uleb128 0x3b
 904 0077 05       		.uleb128 0x5
 905 0078 49       		.uleb128 0x49
 906 0079 13       		.uleb128 0x13
 907 007a 02       		.uleb128 0x2
 908 007b 18       		.uleb128 0x18
 909 007c 00       		.byte	0
 910 007d 00       		.byte	0
 911 007e 09       		.uleb128 0x9
 912 007f 2E       		.uleb128 0x2e
 913 0080 00       		.byte	0
 914 0081 3F       		.uleb128 0x3f
 915 0082 19       		.uleb128 0x19
 916 0083 03       		.uleb128 0x3
 917 0084 0E       		.uleb128 0xe
 918 0085 3A       		.uleb128 0x3a
 919 0086 0B       		.uleb128 0xb
 920 0087 3B       		.uleb128 0x3b
 921 0088 05       		.uleb128 0x5
 922 0089 27       		.uleb128 0x27
 923 008a 19       		.uleb128 0x19
 924 008b 11       		.uleb128 0x11
 925 008c 01       		.uleb128 0x1
 926 008d 12       		.uleb128 0x12
 927 008e 06       		.uleb128 0x6
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 31


 928 008f 40       		.uleb128 0x40
 929 0090 18       		.uleb128 0x18
 930 0091 9742     		.uleb128 0x2117
 931 0093 19       		.uleb128 0x19
 932 0094 00       		.byte	0
 933 0095 00       		.byte	0
 934 0096 0A       		.uleb128 0xa
 935 0097 2E       		.uleb128 0x2e
 936 0098 00       		.byte	0
 937 0099 3F       		.uleb128 0x3f
 938 009a 19       		.uleb128 0x19
 939 009b 03       		.uleb128 0x3
 940 009c 0E       		.uleb128 0xe
 941 009d 3A       		.uleb128 0x3a
 942 009e 0B       		.uleb128 0xb
 943 009f 3B       		.uleb128 0x3b
 944 00a0 05       		.uleb128 0x5
 945 00a1 27       		.uleb128 0x27
 946 00a2 19       		.uleb128 0x19
 947 00a3 49       		.uleb128 0x49
 948 00a4 13       		.uleb128 0x13
 949 00a5 11       		.uleb128 0x11
 950 00a6 01       		.uleb128 0x1
 951 00a7 12       		.uleb128 0x12
 952 00a8 06       		.uleb128 0x6
 953 00a9 40       		.uleb128 0x40
 954 00aa 18       		.uleb128 0x18
 955 00ab 9742     		.uleb128 0x2117
 956 00ad 19       		.uleb128 0x19
 957 00ae 00       		.byte	0
 958 00af 00       		.byte	0
 959 00b0 0B       		.uleb128 0xb
 960 00b1 898201   		.uleb128 0x4109
 961 00b4 00       		.byte	0
 962 00b5 11       		.uleb128 0x11
 963 00b6 01       		.uleb128 0x1
 964 00b7 31       		.uleb128 0x31
 965 00b8 13       		.uleb128 0x13
 966 00b9 00       		.byte	0
 967 00ba 00       		.byte	0
 968 00bb 0C       		.uleb128 0xc
 969 00bc 2E       		.uleb128 0x2e
 970 00bd 01       		.byte	0x1
 971 00be 3F       		.uleb128 0x3f
 972 00bf 19       		.uleb128 0x19
 973 00c0 03       		.uleb128 0x3
 974 00c1 0E       		.uleb128 0xe
 975 00c2 3A       		.uleb128 0x3a
 976 00c3 0B       		.uleb128 0xb
 977 00c4 3B       		.uleb128 0x3b
 978 00c5 0B       		.uleb128 0xb
 979 00c6 27       		.uleb128 0x27
 980 00c7 19       		.uleb128 0x19
 981 00c8 11       		.uleb128 0x11
 982 00c9 01       		.uleb128 0x1
 983 00ca 12       		.uleb128 0x12
 984 00cb 06       		.uleb128 0x6
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 32


 985 00cc 40       		.uleb128 0x40
 986 00cd 18       		.uleb128 0x18
 987 00ce 9742     		.uleb128 0x2117
 988 00d0 19       		.uleb128 0x19
 989 00d1 01       		.uleb128 0x1
 990 00d2 13       		.uleb128 0x13
 991 00d3 00       		.byte	0
 992 00d4 00       		.byte	0
 993 00d5 0D       		.uleb128 0xd
 994 00d6 34       		.uleb128 0x34
 995 00d7 00       		.byte	0
 996 00d8 03       		.uleb128 0x3
 997 00d9 0E       		.uleb128 0xe
 998 00da 3A       		.uleb128 0x3a
 999 00db 0B       		.uleb128 0xb
 1000 00dc 3B       		.uleb128 0x3b
 1001 00dd 0B       		.uleb128 0xb
 1002 00de 49       		.uleb128 0x49
 1003 00df 13       		.uleb128 0x13
 1004 00e0 02       		.uleb128 0x2
 1005 00e1 17       		.uleb128 0x17
 1006 00e2 00       		.byte	0
 1007 00e3 00       		.byte	0
 1008 00e4 0E       		.uleb128 0xe
 1009 00e5 898201   		.uleb128 0x4109
 1010 00e8 01       		.byte	0x1
 1011 00e9 11       		.uleb128 0x11
 1012 00ea 01       		.uleb128 0x1
 1013 00eb 31       		.uleb128 0x31
 1014 00ec 13       		.uleb128 0x13
 1015 00ed 01       		.uleb128 0x1
 1016 00ee 13       		.uleb128 0x13
 1017 00ef 00       		.byte	0
 1018 00f0 00       		.byte	0
 1019 00f1 0F       		.uleb128 0xf
 1020 00f2 8A8201   		.uleb128 0x410a
 1021 00f5 00       		.byte	0
 1022 00f6 02       		.uleb128 0x2
 1023 00f7 18       		.uleb128 0x18
 1024 00f8 9142     		.uleb128 0x2111
 1025 00fa 18       		.uleb128 0x18
 1026 00fb 00       		.byte	0
 1027 00fc 00       		.byte	0
 1028 00fd 10       		.uleb128 0x10
 1029 00fe 898201   		.uleb128 0x4109
 1030 0101 01       		.byte	0x1
 1031 0102 11       		.uleb128 0x11
 1032 0103 01       		.uleb128 0x1
 1033 0104 31       		.uleb128 0x31
 1034 0105 13       		.uleb128 0x13
 1035 0106 00       		.byte	0
 1036 0107 00       		.byte	0
 1037 0108 11       		.uleb128 0x11
 1038 0109 34       		.uleb128 0x34
 1039 010a 00       		.byte	0
 1040 010b 03       		.uleb128 0x3
 1041 010c 0E       		.uleb128 0xe
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 33


 1042 010d 3A       		.uleb128 0x3a
 1043 010e 0B       		.uleb128 0xb
 1044 010f 3B       		.uleb128 0x3b
 1045 0110 0B       		.uleb128 0xb
 1046 0111 49       		.uleb128 0x49
 1047 0112 13       		.uleb128 0x13
 1048 0113 3F       		.uleb128 0x3f
 1049 0114 19       		.uleb128 0x19
 1050 0115 02       		.uleb128 0x2
 1051 0116 18       		.uleb128 0x18
 1052 0117 00       		.byte	0
 1053 0118 00       		.byte	0
 1054 0119 12       		.uleb128 0x12
 1055 011a 2E       		.uleb128 0x2e
 1056 011b 00       		.byte	0
 1057 011c 3F       		.uleb128 0x3f
 1058 011d 19       		.uleb128 0x19
 1059 011e 03       		.uleb128 0x3
 1060 011f 0E       		.uleb128 0xe
 1061 0120 3A       		.uleb128 0x3a
 1062 0121 0B       		.uleb128 0xb
 1063 0122 3B       		.uleb128 0x3b
 1064 0123 0B       		.uleb128 0xb
 1065 0124 27       		.uleb128 0x27
 1066 0125 19       		.uleb128 0x19
 1067 0126 49       		.uleb128 0x49
 1068 0127 13       		.uleb128 0x13
 1069 0128 3C       		.uleb128 0x3c
 1070 0129 19       		.uleb128 0x19
 1071 012a 00       		.byte	0
 1072 012b 00       		.byte	0
 1073 012c 13       		.uleb128 0x13
 1074 012d 2E       		.uleb128 0x2e
 1075 012e 01       		.byte	0x1
 1076 012f 3F       		.uleb128 0x3f
 1077 0130 19       		.uleb128 0x19
 1078 0131 03       		.uleb128 0x3
 1079 0132 0E       		.uleb128 0xe
 1080 0133 3A       		.uleb128 0x3a
 1081 0134 0B       		.uleb128 0xb
 1082 0135 3B       		.uleb128 0x3b
 1083 0136 0B       		.uleb128 0xb
 1084 0137 27       		.uleb128 0x27
 1085 0138 19       		.uleb128 0x19
 1086 0139 3C       		.uleb128 0x3c
 1087 013a 19       		.uleb128 0x19
 1088 013b 00       		.byte	0
 1089 013c 00       		.byte	0
 1090 013d 14       		.uleb128 0x14
 1091 013e 05       		.uleb128 0x5
 1092 013f 00       		.byte	0
 1093 0140 49       		.uleb128 0x49
 1094 0141 13       		.uleb128 0x13
 1095 0142 00       		.byte	0
 1096 0143 00       		.byte	0
 1097 0144 00       		.byte	0
 1098              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 34


 1099              	.Ldebug_loc0:
 1100              	.LLST0:
 1101 0000 12000000 		.4byte	.LVL8
 1102 0004 1F000000 		.4byte	.LVL9-1
 1103 0008 0100     		.2byte	0x1
 1104 000a 50       		.byte	0x50
 1105 000b 00000000 		.4byte	0
 1106 000f 00000000 		.4byte	0
 1107              		.section	.debug_aranges,"",%progbits
 1108 0000 8C000000 		.4byte	0x8c
 1109 0004 0200     		.2byte	0x2
 1110 0006 00000000 		.4byte	.Ldebug_info0
 1111 000a 04       		.byte	0x4
 1112 000b 00       		.byte	0
 1113 000c 0000     		.2byte	0
 1114 000e 0000     		.2byte	0
 1115 0010 00000000 		.4byte	.LFB1
 1116 0014 10000000 		.4byte	.LFE1-.LFB1
 1117 0018 00000000 		.4byte	.LFB3
 1118 001c 10000000 		.4byte	.LFE3-.LFB3
 1119 0020 00000000 		.4byte	.LFB4
 1120 0024 0C000000 		.4byte	.LFE4-.LFB4
 1121 0028 00000000 		.4byte	.LFB5
 1122 002c 0C000000 		.4byte	.LFE5-.LFB5
 1123 0030 00000000 		.4byte	.LFB6
 1124 0034 0C000000 		.4byte	.LFE6-.LFB6
 1125 0038 00000000 		.4byte	.LFB7
 1126 003c 0C000000 		.4byte	.LFE7-.LFB7
 1127 0040 00000000 		.4byte	.LFB8
 1128 0044 0C000000 		.4byte	.LFE8-.LFB8
 1129 0048 00000000 		.4byte	.LFB9
 1130 004c 0C000000 		.4byte	.LFE9-.LFB9
 1131 0050 00000000 		.4byte	.LFB10
 1132 0054 0C000000 		.4byte	.LFE10-.LFB10
 1133 0058 00000000 		.4byte	.LFB11
 1134 005c 0C000000 		.4byte	.LFE11-.LFB11
 1135 0060 00000000 		.4byte	.LFB12
 1136 0064 0C000000 		.4byte	.LFE12-.LFB12
 1137 0068 00000000 		.4byte	.LFB13
 1138 006c 14000000 		.4byte	.LFE13-.LFB13
 1139 0070 00000000 		.4byte	.LFB14
 1140 0074 14000000 		.4byte	.LFE14-.LFB14
 1141 0078 00000000 		.4byte	.LFB0
 1142 007c 30000000 		.4byte	.LFE0-.LFB0
 1143 0080 00000000 		.4byte	.LFB2
 1144 0084 1C000000 		.4byte	.LFE2-.LFB2
 1145 0088 00000000 		.4byte	0
 1146 008c 00000000 		.4byte	0
 1147              		.section	.debug_ranges,"",%progbits
 1148              	.Ldebug_ranges0:
 1149 0000 00000000 		.4byte	.LFB1
 1150 0004 10000000 		.4byte	.LFE1
 1151 0008 00000000 		.4byte	.LFB3
 1152 000c 10000000 		.4byte	.LFE3
 1153 0010 00000000 		.4byte	.LFB4
 1154 0014 0C000000 		.4byte	.LFE4
 1155 0018 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 35


 1156 001c 0C000000 		.4byte	.LFE5
 1157 0020 00000000 		.4byte	.LFB6
 1158 0024 0C000000 		.4byte	.LFE6
 1159 0028 00000000 		.4byte	.LFB7
 1160 002c 0C000000 		.4byte	.LFE7
 1161 0030 00000000 		.4byte	.LFB8
 1162 0034 0C000000 		.4byte	.LFE8
 1163 0038 00000000 		.4byte	.LFB9
 1164 003c 0C000000 		.4byte	.LFE9
 1165 0040 00000000 		.4byte	.LFB10
 1166 0044 0C000000 		.4byte	.LFE10
 1167 0048 00000000 		.4byte	.LFB11
 1168 004c 0C000000 		.4byte	.LFE11
 1169 0050 00000000 		.4byte	.LFB12
 1170 0054 0C000000 		.4byte	.LFE12
 1171 0058 00000000 		.4byte	.LFB13
 1172 005c 14000000 		.4byte	.LFE13
 1173 0060 00000000 		.4byte	.LFB14
 1174 0064 14000000 		.4byte	.LFE14
 1175 0068 00000000 		.4byte	.LFB0
 1176 006c 30000000 		.4byte	.LFE0
 1177 0070 00000000 		.4byte	.LFB2
 1178 0074 1C000000 		.4byte	.LFE2
 1179 0078 00000000 		.4byte	0
 1180 007c 00000000 		.4byte	0
 1181              		.section	.debug_line,"",%progbits
 1182              	.Ldebug_line0:
 1183 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1183      02005300 
 1183      00000201 
 1183      FB0E0D00 
 1183      01010101 
 1184              	.LASF36:
 1185 0000 433A5C55 		.ascii	"C:\\Users\\addis\\Documents\\PSoC Creator\\Workspac"
 1185      73657273 
 1185      5C616464 
 1185      69735C44 
 1185      6F63756D 
 1186 002e 6530325C 		.ascii	"e02\\PS2Keyboard.cydsn\000"
 1186      5053324B 
 1186      6579626F 
 1186      6172642E 
 1186      63796473 
 1187              	.LASF28:
 1188 0044 5053325F 		.ascii	"PS2_Timer_WriteCounter\000"
 1188      54696D65 
 1188      725F5772 
 1188      69746543 
 1188      6F756E74 
 1189              	.LASF26:
 1190 005b 70657269 		.ascii	"period\000"
 1190      6F6400
 1191              	.LASF3:
 1192 0062 73686F72 		.ascii	"short unsigned int\000"
 1192      7420756E 
 1192      7369676E 
 1192      65642069 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 36


 1192      6E7400
 1193              	.LASF25:
 1194 0075 5053325F 		.ascii	"PS2_Timer_WritePeriod\000"
 1194      54696D65 
 1194      725F5772 
 1194      69746550 
 1194      6572696F 
 1195              	.LASF30:
 1196 008b 5053325F 		.ascii	"PS2_Timer_ReadCounter\000"
 1196      54696D65 
 1196      725F5265 
 1196      6164436F 
 1196      756E7465 
 1197              	.LASF9:
 1198 00a1 666C6F61 		.ascii	"float\000"
 1198      7400
 1199              	.LASF29:
 1200 00a7 636F756E 		.ascii	"counter\000"
 1200      74657200 
 1201              	.LASF7:
 1202 00af 6C6F6E67 		.ascii	"long long unsigned int\000"
 1202      206C6F6E 
 1202      6720756E 
 1202      7369676E 
 1202      65642069 
 1203              	.LASF1:
 1204 00c6 756E7369 		.ascii	"unsigned char\000"
 1204      676E6564 
 1204      20636861 
 1204      7200
 1205              	.LASF13:
 1206 00d4 72656738 		.ascii	"reg8\000"
 1206      00
 1207              	.LASF5:
 1208 00d9 6C6F6E67 		.ascii	"long unsigned int\000"
 1208      20756E73 
 1208      69676E65 
 1208      6420696E 
 1208      7400
 1209              	.LASF12:
 1210 00eb 75696E74 		.ascii	"uint8\000"
 1210      3800
 1211              	.LASF21:
 1212 00f1 5053325F 		.ascii	"PS2_Timer_WriteControlRegister\000"
 1212      54696D65 
 1212      725F5772 
 1212      69746543 
 1212      6F6E7472 
 1213              	.LASF35:
 1214 0110 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PS2_Timer.c\000"
 1214      6E657261 
 1214      7465645F 
 1214      536F7572 
 1214      63655C50 
 1215              	.LASF10:
 1216 0135 646F7562 		.ascii	"double\000"
 1216      6C6500
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 37


 1217              	.LASF32:
 1218 013c 5053325F 		.ascii	"PS2_Timer_Init\000"
 1218      54696D65 
 1218      725F496E 
 1218      697400
 1219              	.LASF33:
 1220 014b 5053325F 		.ascii	"PS2_Timer_Start\000"
 1220      54696D65 
 1220      725F5374 
 1220      61727400 
 1221              	.LASF24:
 1222 015b 5053325F 		.ascii	"PS2_Timer_ReadPeriod\000"
 1222      54696D65 
 1222      725F5265 
 1222      61645065 
 1222      72696F64 
 1223              	.LASF39:
 1224 0170 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1224      74657243 
 1224      72697469 
 1224      63616C53 
 1224      65637469 
 1225              	.LASF8:
 1226 0187 756E7369 		.ascii	"unsigned int\000"
 1226      676E6564 
 1226      20696E74 
 1226      00
 1227              	.LASF40:
 1228 0194 43794578 		.ascii	"CyExitCriticalSection\000"
 1228      69744372 
 1228      69746963 
 1228      616C5365 
 1228      6374696F 
 1229              	.LASF34:
 1230 01aa 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1230      4320342E 
 1230      392E3320 
 1230      32303135 
 1230      30333033 
 1231 01dd 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1231      20726576 
 1231      6973696F 
 1231      6E203232 
 1231      31323230 
 1232 0210 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1232      66756E63 
 1232      74696F6E 
 1232      2D736563 
 1232      74696F6E 
 1233              	.LASF31:
 1234 0238 5053325F 		.ascii	"PS2_Timer_ClearFIFO\000"
 1234      54696D65 
 1234      725F436C 
 1234      65617246 
 1234      49464F00 
 1235              	.LASF27:
 1236 024c 5053325F 		.ascii	"PS2_Timer_ReadCapture\000"
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 38


 1236      54696D65 
 1236      725F5265 
 1236      61644361 
 1236      70747572 
 1237              	.LASF37:
 1238 0262 5053325F 		.ascii	"PS2_Timer_interruptState\000"
 1238      54696D65 
 1238      725F696E 
 1238      74657272 
 1238      75707453 
 1239              	.LASF14:
 1240 027b 73697A65 		.ascii	"sizetype\000"
 1240      74797065 
 1240      00
 1241              	.LASF6:
 1242 0284 6C6F6E67 		.ascii	"long long int\000"
 1242      206C6F6E 
 1242      6720696E 
 1242      7400
 1243              	.LASF22:
 1244 0292 696E7465 		.ascii	"interruptMode\000"
 1244      72727570 
 1244      744D6F64 
 1244      6500
 1245              	.LASF16:
 1246 02a0 5053325F 		.ascii	"PS2_Timer_Stop\000"
 1246      54696D65 
 1246      725F5374 
 1246      6F7000
 1247              	.LASF2:
 1248 02af 73686F72 		.ascii	"short int\000"
 1248      7420696E 
 1248      7400
 1249              	.LASF18:
 1250 02b9 5053325F 		.ascii	"PS2_Timer_ReadStatusRegister\000"
 1250      54696D65 
 1250      725F5265 
 1250      61645374 
 1250      61747573 
 1251              	.LASF19:
 1252 02d6 5053325F 		.ascii	"PS2_Timer_ReadControlRegister\000"
 1252      54696D65 
 1252      725F5265 
 1252      6164436F 
 1252      6E74726F 
 1253              	.LASF23:
 1254 02f4 636F6E74 		.ascii	"control\000"
 1254      726F6C00 
 1255              	.LASF4:
 1256 02fc 6C6F6E67 		.ascii	"long int\000"
 1256      20696E74 
 1256      00
 1257              	.LASF11:
 1258 0305 63686172 		.ascii	"char\000"
 1258      00
 1259              	.LASF0:
 1260 030a 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccqBA6FM.s 			page 39


 1260      65642063 
 1260      68617200 
 1261              	.LASF15:
 1262 0316 5053325F 		.ascii	"PS2_Timer_Enable\000"
 1262      54696D65 
 1262      725F456E 
 1262      61626C65 
 1262      00
 1263              	.LASF38:
 1264 0327 5053325F 		.ascii	"PS2_Timer_initVar\000"
 1264      54696D65 
 1264      725F696E 
 1264      69745661 
 1264      7200
 1265              	.LASF17:
 1266 0339 5053325F 		.ascii	"PS2_Timer_SoftwareCapture\000"
 1266      54696D65 
 1266      725F536F 
 1266      66747761 
 1266      72654361 
 1267              	.LASF20:
 1268 0353 5053325F 		.ascii	"PS2_Timer_SetInterruptMode\000"
 1268      54696D65 
 1268      725F5365 
 1268      74496E74 
 1268      65727275 
 1269              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
