ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PS2_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PS2_Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PS2_Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PS2_Timer_Enable, %function
  24              	PS2_Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PS2_Timer.c"
   1:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PS2_Timer.c **** * File Name: PS2_Timer.c
   3:.\Generated_Source\PSoC5/PS2_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/PS2_Timer.c **** *
   5:.\Generated_Source\PSoC5/PS2_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/PS2_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/PS2_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/PS2_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/PS2_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/PS2_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/PS2_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  15:.\Generated_Source\PSoC5/PS2_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  17:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/PS2_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PS2_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PS2_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PS2_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  24:.\Generated_Source\PSoC5/PS2_Timer.c **** #include "PS2_Timer.h"
  25:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  26:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  28:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  29:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Init
  31:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 2


  32:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  33:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  36:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  39:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/PS2_Timer.c **** *
  42:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  45:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(!PS2_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/PS2_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/PS2_Timer.c ****             uint8 PS2_Timer_interruptState;
  48:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  50:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= PS2_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  54:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_CONTROL2 &= ((uint8)(~PS2_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  59:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_CONTROL3 &= ((uint8)(~PS2_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  63:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/PS2_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  69:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/PS2_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  76:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/PS2_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  82:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  84:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL2 |= PS2_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 3


  89:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  90:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 &= ((uint8)(~PS2_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= PS2_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  95:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 &= ((uint8)(~PS2_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= PS2_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/PS2_Timer.c **** 
  99:.\Generated_Source\PSoC5/PS2_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/PS2_Timer.c ****                 PS2_Timer_CONTROL3 |= PS2_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 103:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 105:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 &= ((uint8)(~PS2_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 |= PS2_Timer_SYNC;
 108:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 109:.\Generated_Source\PSoC5/PS2_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 &= ((uint8)(~PS2_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 |= PS2_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 113:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL2 |= PS2_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 117:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_WritePeriod(PS2_Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_WriteCounter(PS2_Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 121:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CAPTURE_COUNT_CTRL |= PS2_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_SetCaptureCount(PS2_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 126:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_SetCaptureMode(PS2_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 131:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/PS2_Timer.c ****             #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/PS2_Timer.c ****                 if (0u == (PS2_Timer_CONTROL & PS2_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/PS2_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/PS2_Timer.c ****                     PS2_Timer_SetTriggerMode(PS2_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/PS2_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/PS2_Timer.c ****             #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 140:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 144:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_STATUS_AUX_CTRL |= PS2_Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 4


 146:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 147:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/PS2_Timer.c ****         CyExitCriticalSection(PS2_Timer_interruptState);
 149:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 150:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/PS2_Timer.c **** 		
 154:.\Generated_Source\PSoC5/PS2_Timer.c **** 		
 155:.\Generated_Source\PSoC5/PS2_Timer.c ****         #if (PS2_Timer_InterruptOnCaptureCount && !PS2_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/PS2_Timer.c ****             PS2_Timer_SetInterruptCount(PS2_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 159:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 162:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_SetInterruptMode(PS2_Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 164:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 165:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 166:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Enable
 168:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 170:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 173:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 176:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 179:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 182:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_ENABLE |= PS2_Timer_BLOCK_EN_MASK;
  32              		.loc 1 184 0
  33 0000 084A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F00103 		orr	r3, r3, #1
  36 0008 1370     		strb	r3, [r2]
 185:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_STBY_ENABLE |= PS2_Timer_BLOCK_STBY_EN_MASK;
  37              		.loc 1 185 0
  38 000a 1032     		adds	r2, r2, #16
  39 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  40 000e 43F00103 		orr	r3, r3, #1
  41 0012 1370     		strb	r3, [r2]
 186:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/PS2_Timer.c **** 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 5


 188:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED || PS2_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL |= PS2_Timer_CTRL_ENABLE;
  42              		.loc 1 190 0
  43 0014 02F64D32 		addw	r2, r2, #2893
  44 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  45 001a 43F00103 		orr	r3, r3, #1
  46 001e 1370     		strb	r3, [r2]
  47 0020 7047     		bx	lr
  48              	.L3:
  49 0022 00BF     		.align	2
  50              	.L2:
  51 0024 A3430040 		.word	1073759139
  52              		.cfi_endproc
  53              	.LFE1:
  54              		.size	PS2_Timer_Enable, .-PS2_Timer_Enable
  55              		.section	.text.PS2_Timer_Stop,"ax",%progbits
  56              		.align	2
  57              		.global	PS2_Timer_Stop
  58              		.thumb
  59              		.thumb_func
  60              		.type	PS2_Timer_Stop, %function
  61              	PS2_Timer_Stop:
  62              	.LFB3:
 191:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 193:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 194:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 195:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Start
 197:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 199:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/PS2_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/PS2_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 204:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 207:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 210:.\Generated_Source\PSoC5/PS2_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/PS2_Timer.c **** *  PS2_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/PS2_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 214:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 217:.\Generated_Source\PSoC5/PS2_Timer.c ****     if(PS2_Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/PS2_Timer.c ****     {
 219:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_Init();
 220:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 221:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/PS2_Timer.c ****     }
 223:.\Generated_Source\PSoC5/PS2_Timer.c **** 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 6


 224:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_Enable();
 226:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 227:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 228:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 229:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_Stop
 231:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 233:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 234:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/PS2_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 237:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 240:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 243:.\Generated_Source\PSoC5/PS2_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/PS2_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 246:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  63              		.loc 1 248 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 249:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(!PS2_Timer_UDB_CONTROL_REG_REMOVED || PS2_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL &= ((uint8)(~PS2_Timer_CTRL_ENABLE));
  68              		.loc 1 251 0
  69 0000 084A     		ldr	r2, .L5
  70 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  71 0004 03F0FE03 		and	r3, r3, #254
  72 0008 1370     		strb	r3, [r2]
 252:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 254:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (PS2_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_ENABLE &= ((uint8)(~PS2_Timer_BLOCK_EN_MASK));
  73              		.loc 1 256 0
  74 000a A2F65D32 		subw	r2, r2, #2909
  75 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  76 0010 03F0FE03 		and	r3, r3, #254
  77 0014 1370     		strb	r3, [r2]
 257:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~PS2_Timer_BLOCK_STBY_EN_MASK));
  78              		.loc 1 257 0
  79 0016 1032     		adds	r2, r2, #16
  80 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 001a 03F0FE03 		and	r3, r3, #254
  82 001e 1370     		strb	r3, [r2]
  83 0020 7047     		bx	lr
  84              	.L6:
  85 0022 00BF     		.align	2
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 7


  86              	.L5:
  87 0024 004F0040 		.word	1073762048
  88              		.cfi_endproc
  89              	.LFE3:
  90              		.size	PS2_Timer_Stop, .-PS2_Timer_Stop
  91              		.section	.text.PS2_Timer_SetInterruptMode,"ax",%progbits
  92              		.align	2
  93              		.global	PS2_Timer_SetInterruptMode
  94              		.thumb
  95              		.thumb_func
  96              		.type	PS2_Timer_SetInterruptMode, %function
  97              	PS2_Timer_SetInterruptMode:
  98              	.LFB4:
 258:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 260:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 261:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 262:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 266:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/PS2_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 271:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/PS2_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/PS2_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 275:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 278:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/PS2_Timer.c **** {
  99              		.loc 1 280 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL0:
 281:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_STATUS_MASK = interruptMode;
 105              		.loc 1 281 0
 106 0000 014B     		ldr	r3, .L8
 107 0002 1870     		strb	r0, [r3]
 108 0004 7047     		bx	lr
 109              	.L9:
 110 0006 00BF     		.align	2
 111              	.L8:
 112 0008 034F0040 		.word	1073762051
 113              		.cfi_endproc
 114              	.LFE4:
 115              		.size	PS2_Timer_SetInterruptMode, .-PS2_Timer_SetInterruptMode
 116              		.section	.text.PS2_Timer_SoftwareCapture,"ax",%progbits
 117              		.align	2
 118              		.global	PS2_Timer_SoftwareCapture
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 8


 119              		.thumb
 120              		.thumb_func
 121              		.type	PS2_Timer_SoftwareCapture, %function
 122              	PS2_Timer_SoftwareCapture:
 123              	.LFB5:
 282:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 283:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 284:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 285:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 289:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 292:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 295:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 297:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 298:.\Generated_Source\PSoC5/PS2_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/PS2_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 301:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 124              		.loc 1 303 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG16(PS2_Timer_COUNTER_LSB_PTR);
 129              		.loc 1 306 0
 130 0000 014B     		ldr	r3, .L11
 131 0002 1B88     		ldrh	r3, [r3]
 132 0004 7047     		bx	lr
 133              	.L12:
 134 0006 00BF     		.align	2
 135              	.L11:
 136 0008 064F0040 		.word	1073762054
 137              		.cfi_endproc
 138              	.LFE5:
 139              		.size	PS2_Timer_SoftwareCapture, .-PS2_Timer_SoftwareCapture
 140              		.section	.text.PS2_Timer_ReadStatusRegister,"ax",%progbits
 141              		.align	2
 142              		.global	PS2_Timer_ReadStatusRegister
 143              		.thumb
 144              		.thumb_func
 145              		.type	PS2_Timer_ReadStatusRegister, %function
 146              	PS2_Timer_ReadStatusRegister:
 147              	.LFB6:
 307:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG8(PS2_Timer_COUNTER_LSB_PTR_8BIT);
 309:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif/* (PS2_Timer_UsingFixedFunction) */
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 9


 310:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 312:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 313:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 314:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 318:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/PS2_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/PS2_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 323:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 326:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 329:.\Generated_Source\PSoC5/PS2_Timer.c **** * Side Effects:
 330:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 332:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8   PS2_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 148              		.loc 1 334 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/PS2_Timer.c ****     return (PS2_Timer_STATUS);
 153              		.loc 1 335 0
 154 0000 014B     		ldr	r3, .L14
 155 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 156              		.loc 1 336 0
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 00BF     		.align	2
 160              	.L14:
 161 0008 034F0040 		.word	1073762051
 162              		.cfi_endproc
 163              	.LFE6:
 164              		.size	PS2_Timer_ReadStatusRegister, .-PS2_Timer_ReadStatusRegister
 165              		.section	.text.PS2_Timer_ReadControlRegister,"ax",%progbits
 166              		.align	2
 167              		.global	PS2_Timer_ReadControlRegister
 168              		.thumb
 169              		.thumb_func
 170              		.type	PS2_Timer_ReadControlRegister, %function
 171              	PS2_Timer_ReadControlRegister:
 172              	.LFB7:
 337:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 338:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 339:.\Generated_Source\PSoC5/PS2_Timer.c **** #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 341:.\Generated_Source\PSoC5/PS2_Timer.c **** 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 10


 342:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 346:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 349:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 352:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 355:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 173              		.loc 1 357 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 358:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/PS2_Timer.c ****         return ((uint8)PS2_Timer_CONTROL);
 178              		.loc 1 359 0
 179 0000 014B     		ldr	r3, .L17
 180 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/PS2_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 181              		.loc 1 363 0
 182 0004 7047     		bx	lr
 183              	.L18:
 184 0006 00BF     		.align	2
 185              	.L17:
 186 0008 004F0040 		.word	1073762048
 187              		.cfi_endproc
 188              	.LFE7:
 189              		.size	PS2_Timer_ReadControlRegister, .-PS2_Timer_ReadControlRegister
 190              		.section	.text.PS2_Timer_WriteControlRegister,"ax",%progbits
 191              		.align	2
 192              		.global	PS2_Timer_WriteControlRegister
 193              		.thumb
 194              		.thumb_func
 195              		.type	PS2_Timer_WriteControlRegister, %function
 196              	PS2_Timer_WriteControlRegister:
 197              	.LFB8:
 364:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 365:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 366:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 370:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 373:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 11


 374:.\Generated_Source\PSoC5/PS2_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 376:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 378:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 198              		.loc 1 380 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              	.LVL1:
 381:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if (!PS2_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_CONTROL = control;
 204              		.loc 1 382 0
 205 0000 014B     		ldr	r3, .L20
 206 0002 1870     		strb	r0, [r3]
 207 0004 7047     		bx	lr
 208              	.L21:
 209 0006 00BF     		.align	2
 210              	.L20:
 211 0008 004F0040 		.word	1073762048
 212              		.cfi_endproc
 213              	.LFE8:
 214              		.size	PS2_Timer_WriteControlRegister, .-PS2_Timer_WriteControlRegister
 215              		.section	.text.PS2_Timer_ReadPeriod,"ax",%progbits
 216              		.align	2
 217              		.global	PS2_Timer_ReadPeriod
 218              		.thumb
 219              		.thumb_func
 220              		.type	PS2_Timer_ReadPeriod, %function
 221              	PS2_Timer_ReadPeriod:
 222              	.LFB9:
 383:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/PS2_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (!PS2_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 387:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 388:.\Generated_Source\PSoC5/PS2_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 390:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 391:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 395:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 398:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 401:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/PS2_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 404:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadPeriod(void) 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 12


 406:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 223              		.loc 1 406 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/PS2_Timer.c ****    #if(PS2_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/PS2_Timer.c ****        return ((uint8)CY_GET_REG16(PS2_Timer_PERIOD_LSB_PTR));
 228              		.loc 1 408 0
 229 0000 014B     		ldr	r3, .L23
 230 0002 1888     		ldrh	r0, [r3]
 409:.\Generated_Source\PSoC5/PS2_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/PS2_Timer.c ****        return (CY_GET_REG8(PS2_Timer_PERIOD_LSB_PTR));
 411:.\Generated_Source\PSoC5/PS2_Timer.c ****    #endif /* (PS2_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 231              		.loc 1 412 0
 232 0004 C0B2     		uxtb	r0, r0
 233 0006 7047     		bx	lr
 234              	.L24:
 235              		.align	2
 236              	.L23:
 237 0008 044F0040 		.word	1073762052
 238              		.cfi_endproc
 239              	.LFE9:
 240              		.size	PS2_Timer_ReadPeriod, .-PS2_Timer_ReadPeriod
 241              		.section	.text.PS2_Timer_WritePeriod,"ax",%progbits
 242              		.align	2
 243              		.global	PS2_Timer_WritePeriod
 244              		.thumb
 245              		.thumb_func
 246              		.type	PS2_Timer_WritePeriod, %function
 247              	PS2_Timer_WritePeriod:
 248              	.LFB10:
 413:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 414:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 415:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 419:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/PS2_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 423:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/PS2_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/PS2_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 427:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 430:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_WritePeriod(uint8 period) 
 432:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 249              		.loc 1 432 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 13


 253              		@ link register save eliminated.
 254              	.LVL2:
 433:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/PS2_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG16(PS2_Timer_PERIOD_LSB_PTR, period_temp);
 255              		.loc 1 435 0
 256 0000 014B     		ldr	r3, .L26
 257 0002 1880     		strh	r0, [r3]	@ movhi
 258 0004 7047     		bx	lr
 259              	.L27:
 260 0006 00BF     		.align	2
 261              	.L26:
 262 0008 044F0040 		.word	1073762052
 263              		.cfi_endproc
 264              	.LFE10:
 265              		.size	PS2_Timer_WritePeriod, .-PS2_Timer_WritePeriod
 266              		.section	.text.PS2_Timer_ReadCapture,"ax",%progbits
 267              		.align	2
 268              		.global	PS2_Timer_ReadCapture
 269              		.thumb
 270              		.thumb_func
 271              		.type	PS2_Timer_ReadCapture, %function
 272              	PS2_Timer_ReadCapture:
 273              	.LFB11:
 436:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG8(PS2_Timer_PERIOD_LSB_PTR, period);
 438:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 440:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 441:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 442:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 446:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 449:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 451:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 452:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 455:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 274              		.loc 1 457 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/PS2_Timer.c ****    #if(PS2_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/PS2_Timer.c ****        return ((uint8)CY_GET_REG16(PS2_Timer_CAPTURE_LSB_PTR));
 279              		.loc 1 459 0
 280 0000 014B     		ldr	r3, .L29
 281 0002 1888     		ldrh	r0, [r3]
 460:.\Generated_Source\PSoC5/PS2_Timer.c ****    #else
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 14


 461:.\Generated_Source\PSoC5/PS2_Timer.c ****        return (CY_GET_REG8(PS2_Timer_CAPTURE_LSB_PTR));
 462:.\Generated_Source\PSoC5/PS2_Timer.c ****    #endif /* (PS2_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 282              		.loc 1 463 0
 283 0004 C0B2     		uxtb	r0, r0
 284 0006 7047     		bx	lr
 285              	.L30:
 286              		.align	2
 287              	.L29:
 288 0008 084F0040 		.word	1073762056
 289              		.cfi_endproc
 290              	.LFE11:
 291              		.size	PS2_Timer_ReadCapture, .-PS2_Timer_ReadCapture
 292              		.section	.text.PS2_Timer_WriteCounter,"ax",%progbits
 293              		.align	2
 294              		.global	PS2_Timer_WriteCounter
 295              		.thumb
 296              		.thumb_func
 297              		.type	PS2_Timer_WriteCounter, %function
 298              	PS2_Timer_WriteCounter:
 299              	.LFB12:
 464:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 465:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 466:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 470:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 473:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/PS2_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 476:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 479:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/PS2_Timer.c **** void PS2_Timer_WriteCounter(uint8 counter) 
 481:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 300              		.loc 1 481 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305              	.LVL3:
 482:.\Generated_Source\PSoC5/PS2_Timer.c ****    #if(PS2_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/PS2_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/PS2_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/PS2_Timer.c ****          */
 486:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG16(PS2_Timer_COUNTER_LSB_PTR, (uint16)counter);
 306              		.loc 1 486 0
 307 0000 014B     		ldr	r3, .L32
 308 0002 1880     		strh	r0, [r3]	@ movhi
 309 0004 7047     		bx	lr
 310              	.L33:
 311 0006 00BF     		.align	2
 312              	.L32:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 15


 313 0008 064F0040 		.word	1073762054
 314              		.cfi_endproc
 315              	.LFE12:
 316              		.size	PS2_Timer_WriteCounter, .-PS2_Timer_WriteCounter
 317              		.section	.text.PS2_Timer_Init,"ax",%progbits
 318              		.align	2
 319              		.global	PS2_Timer_Init
 320              		.thumb
 321              		.thumb_func
 322              		.type	PS2_Timer_Init, %function
 323              	PS2_Timer_Init:
 324              	.LFB0:
  44:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(!PS2_Timer_UsingFixedFunction)
 325              		.loc 1 44 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
 332              		.cfi_offset 14, -4
  52:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 333              		.loc 1 52 0
 334 0002 174B     		ldr	r3, .L36
 335 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 336 0006 02F00102 		and	r2, r2, #1
 337 000a 1A70     		strb	r2, [r3]
  60:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
 338              		.loc 1 60 0
 339 000c 1549     		ldr	r1, .L36+4
 340 000e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 341 0010 02F0FC02 		and	r2, r2, #252
 342 0014 0A70     		strb	r2, [r1]
  66:.\Generated_Source\PSoC5/PS2_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
 343              		.loc 1 66 0
 344 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 345 0018 42F00402 		orr	r2, r2, #4
 346 001c 1A70     		strb	r2, [r3]
 106:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 |= PS2_Timer_SYNC;
 347              		.loc 1 106 0
 348 001e 0B33     		adds	r3, r3, #11
 349 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 350 0022 02F0CF02 		and	r2, r2, #207
 351 0026 1A70     		strb	r2, [r3]
 107:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 352              		.loc 1 107 0
 353 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 354 002a 42F03002 		orr	r2, r2, #48
 355 002e 1A70     		strb	r2, [r3]
 110:.\Generated_Source\PSoC5/PS2_Timer.c ****         PS2_Timer_RT1 |= PS2_Timer_SYNCDSI_EN;
 356              		.loc 1 110 0
 357 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 358 0032 02F0F002 		and	r2, r2, #240
 359 0036 1A70     		strb	r2, [r3]
 111:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 360              		.loc 1 111 0
 361 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 16


 362 003a 42F00F02 		orr	r2, r2, #15
 363 003e 1A70     		strb	r2, [r3]
 114:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 364              		.loc 1 114 0
 365 0040 094A     		ldr	r2, .L36+8
 366 0042 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 367 0044 43F00103 		orr	r3, r3, #1
 368 0048 1370     		strb	r3, [r2]
 118:.\Generated_Source\PSoC5/PS2_Timer.c ****     PS2_Timer_WriteCounter(PS2_Timer_INIT_PERIOD);
 369              		.loc 1 118 0
 370 004a FF20     		movs	r0, #255
 371 004c FFF7FEFF 		bl	PS2_Timer_WritePeriod
 372              	.LVL4:
 119:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 373              		.loc 1 119 0
 374 0050 FF20     		movs	r0, #255
 375 0052 FFF7FEFF 		bl	PS2_Timer_WriteCounter
 376              	.LVL5:
 162:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 377              		.loc 1 162 0
 378 0056 0820     		movs	r0, #8
 379 0058 FFF7FEFF 		bl	PS2_Timer_SetInterruptMode
 380              	.LVL6:
 381 005c 08BD     		pop	{r3, pc}
 382              	.L37:
 383 005e 00BF     		.align	2
 384              	.L36:
 385 0060 004F0040 		.word	1073762048
 386 0064 024F0040 		.word	1073762050
 387 0068 014F0040 		.word	1073762049
 388              		.cfi_endproc
 389              	.LFE0:
 390              		.size	PS2_Timer_Init, .-PS2_Timer_Init
 391              		.section	.text.PS2_Timer_Start,"ax",%progbits
 392              		.align	2
 393              		.global	PS2_Timer_Start
 394              		.thumb
 395              		.thumb_func
 396              		.type	PS2_Timer_Start, %function
 397              	PS2_Timer_Start:
 398              	.LFB2:
 216:.\Generated_Source\PSoC5/PS2_Timer.c ****     if(PS2_Timer_initVar == 0u)
 399              		.loc 1 216 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 08B5     		push	{r3, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/PS2_Timer.c ****     {
 407              		.loc 1 217 0
 408 0002 054B     		ldr	r3, .L41
 409 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 410 0006 23B9     		cbnz	r3, .L39
 219:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 411              		.loc 1 219 0
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 17


 412 0008 FFF7FEFF 		bl	PS2_Timer_Init
 413              	.LVL7:
 221:.\Generated_Source\PSoC5/PS2_Timer.c ****     }
 414              		.loc 1 221 0
 415 000c 0122     		movs	r2, #1
 416 000e 024B     		ldr	r3, .L41
 417 0010 1A70     		strb	r2, [r3]
 418              	.L39:
 225:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 419              		.loc 1 225 0
 420 0012 FFF7FEFF 		bl	PS2_Timer_Enable
 421              	.LVL8:
 422 0016 08BD     		pop	{r3, pc}
 423              	.L42:
 424              		.align	2
 425              	.L41:
 426 0018 00000000 		.word	.LANCHOR0
 427              		.cfi_endproc
 428              	.LFE2:
 429              		.size	PS2_Timer_Start, .-PS2_Timer_Start
 430              		.section	.text.PS2_Timer_ReadCounter,"ax",%progbits
 431              		.align	2
 432              		.global	PS2_Timer_ReadCounter
 433              		.thumb
 434              		.thumb_func
 435              		.type	PS2_Timer_ReadCounter, %function
 436              	PS2_Timer_ReadCounter:
 437              	.LFB13:
 487:.\Generated_Source\PSoC5/PS2_Timer.c ****         
 488:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/PS2_Timer.c ****         CY_SET_REG8(PS2_Timer_COUNTER_LSB_PTR, counter);
 490:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 492:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 493:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 494:.\Generated_Source\PSoC5/PS2_Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/PS2_Timer.c **** * Function Name: PS2_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/PS2_Timer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 498:.\Generated_Source\PSoC5/PS2_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/PS2_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 501:.\Generated_Source\PSoC5/PS2_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/PS2_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 504:.\Generated_Source\PSoC5/PS2_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/PS2_Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/PS2_Timer.c **** *
 507:.\Generated_Source\PSoC5/PS2_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/PS2_Timer.c **** uint8 PS2_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/PS2_Timer.c **** {
 438              		.loc 1 509 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Force capture by reading Accumulator */
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 18


 511:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG16(PS2_Timer_COUNTER_LSB_PTR);
 443              		.loc 1 514 0
 444 0000 024B     		ldr	r3, .L44
 445 0002 1B88     		ldrh	r3, [r3]
 515:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/PS2_Timer.c ****         (void)CY_GET_REG8(PS2_Timer_COUNTER_LSB_PTR_8BIT);
 517:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif/* (PS2_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/PS2_Timer.c **** 
 519:.\Generated_Source\PSoC5/PS2_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/PS2_Timer.c ****     #if(PS2_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/PS2_Timer.c ****         return ((uint8)CY_GET_REG16(PS2_Timer_CAPTURE_LSB_PTR));
 446              		.loc 1 521 0
 447 0004 024B     		ldr	r3, .L44+4
 448 0006 1888     		ldrh	r0, [r3]
 522:.\Generated_Source\PSoC5/PS2_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/PS2_Timer.c ****         return (CY_GET_REG8(PS2_Timer_CAPTURE_LSB_PTR));
 524:.\Generated_Source\PSoC5/PS2_Timer.c ****     #endif /* (PS2_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/PS2_Timer.c **** }
 449              		.loc 1 525 0
 450 0008 C0B2     		uxtb	r0, r0
 451 000a 7047     		bx	lr
 452              	.L45:
 453              		.align	2
 454              	.L44:
 455 000c 064F0040 		.word	1073762054
 456 0010 084F0040 		.word	1073762056
 457              		.cfi_endproc
 458              	.LFE13:
 459              		.size	PS2_Timer_ReadCounter, .-PS2_Timer_ReadCounter
 460              		.global	PS2_Timer_initVar
 461              		.bss
 462              		.set	.LANCHOR0,. + 0
 463              		.type	PS2_Timer_initVar, %object
 464              		.size	PS2_Timer_initVar, 1
 465              	PS2_Timer_initVar:
 466 0000 00       		.space	1
 467              		.text
 468              	.Letext0:
 469              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 470              		.section	.debug_info,"",%progbits
 471              	.Ldebug_info0:
 472 0000 88020000 		.4byte	0x288
 473 0004 0400     		.2byte	0x4
 474 0006 00000000 		.4byte	.Ldebug_abbrev0
 475 000a 04       		.byte	0x4
 476 000b 01       		.uleb128 0x1
 477 000c 8A010000 		.4byte	.LASF35
 478 0010 01       		.byte	0x1
 479 0011 FF000000 		.4byte	.LASF36
 480 0015 06000000 		.4byte	.LASF37
 481 0019 00000000 		.4byte	.Ldebug_ranges0+0
 482 001d 00000000 		.4byte	0
 483 0021 00000000 		.4byte	.Ldebug_line0
 484 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 19


 485 0026 01       		.byte	0x1
 486 0027 06       		.byte	0x6
 487 0028 C9020000 		.4byte	.LASF0
 488 002c 02       		.uleb128 0x2
 489 002d 01       		.byte	0x1
 490 002e 08       		.byte	0x8
 491 002f B5000000 		.4byte	.LASF1
 492 0033 02       		.uleb128 0x2
 493 0034 02       		.byte	0x2
 494 0035 05       		.byte	0x5
 495 0036 6E020000 		.4byte	.LASF2
 496 003a 02       		.uleb128 0x2
 497 003b 02       		.byte	0x2
 498 003c 07       		.byte	0x7
 499 003d 68000000 		.4byte	.LASF3
 500 0041 02       		.uleb128 0x2
 501 0042 04       		.byte	0x4
 502 0043 05       		.byte	0x5
 503 0044 BB020000 		.4byte	.LASF4
 504 0048 02       		.uleb128 0x2
 505 0049 04       		.byte	0x4
 506 004a 07       		.byte	0x7
 507 004b C8000000 		.4byte	.LASF5
 508 004f 02       		.uleb128 0x2
 509 0050 08       		.byte	0x8
 510 0051 05       		.byte	0x5
 511 0052 43020000 		.4byte	.LASF6
 512 0056 02       		.uleb128 0x2
 513 0057 08       		.byte	0x8
 514 0058 07       		.byte	0x7
 515 0059 73010000 		.4byte	.LASF7
 516 005d 03       		.uleb128 0x3
 517 005e 04       		.byte	0x4
 518 005f 05       		.byte	0x5
 519 0060 696E7400 		.ascii	"int\000"
 520 0064 02       		.uleb128 0x2
 521 0065 04       		.byte	0x4
 522 0066 07       		.byte	0x7
 523 0067 66010000 		.4byte	.LASF8
 524 006b 04       		.uleb128 0x4
 525 006c DA000000 		.4byte	.LASF9
 526 0070 02       		.byte	0x2
 527 0071 3801     		.2byte	0x138
 528 0073 2C000000 		.4byte	0x2c
 529 0077 04       		.uleb128 0x4
 530 0078 4A010000 		.4byte	.LASF10
 531 007c 02       		.byte	0x2
 532 007d 3901     		.2byte	0x139
 533 007f 3A000000 		.4byte	0x3a
 534 0083 02       		.uleb128 0x2
 535 0084 04       		.byte	0x4
 536 0085 04       		.byte	0x4
 537 0086 A7000000 		.4byte	.LASF11
 538 008a 02       		.uleb128 0x2
 539 008b 08       		.byte	0x8
 540 008c 04       		.byte	0x4
 541 008d 24010000 		.4byte	.LASF12
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 20


 542 0091 02       		.uleb128 0x2
 543 0092 01       		.byte	0x1
 544 0093 08       		.byte	0x8
 545 0094 C4020000 		.4byte	.LASF13
 546 0098 04       		.uleb128 0x4
 547 0099 C3000000 		.4byte	.LASF14
 548 009d 02       		.byte	0x2
 549 009e E201     		.2byte	0x1e2
 550 00a0 A4000000 		.4byte	0xa4
 551 00a4 05       		.uleb128 0x5
 552 00a5 6B000000 		.4byte	0x6b
 553 00a9 04       		.uleb128 0x4
 554 00aa 00000000 		.4byte	.LASF15
 555 00ae 02       		.byte	0x2
 556 00af E301     		.2byte	0x1e3
 557 00b1 B5000000 		.4byte	0xb5
 558 00b5 05       		.uleb128 0x5
 559 00b6 77000000 		.4byte	0x77
 560 00ba 02       		.uleb128 0x2
 561 00bb 04       		.byte	0x4
 562 00bc 07       		.byte	0x7
 563 00bd 3A020000 		.4byte	.LASF16
 564 00c1 06       		.uleb128 0x6
 565 00c2 D5020000 		.4byte	.LASF17
 566 00c6 01       		.byte	0x1
 567 00c7 B4       		.byte	0xb4
 568 00c8 00000000 		.4byte	.LFB1
 569 00cc 28000000 		.4byte	.LFE1-.LFB1
 570 00d0 01       		.uleb128 0x1
 571 00d1 9C       		.byte	0x9c
 572 00d2 06       		.uleb128 0x6
 573 00d3 5F020000 		.4byte	.LASF18
 574 00d7 01       		.byte	0x1
 575 00d8 F7       		.byte	0xf7
 576 00d9 00000000 		.4byte	.LFB3
 577 00dd 28000000 		.4byte	.LFE3-.LFB3
 578 00e1 01       		.uleb128 0x1
 579 00e2 9C       		.byte	0x9c
 580 00e3 07       		.uleb128 0x7
 581 00e4 12030000 		.4byte	.LASF22
 582 00e8 01       		.byte	0x1
 583 00e9 1701     		.2byte	0x117
 584 00eb 00000000 		.4byte	.LFB4
 585 00ef 0C000000 		.4byte	.LFE4-.LFB4
 586 00f3 01       		.uleb128 0x1
 587 00f4 9C       		.byte	0x9c
 588 00f5 08010000 		.4byte	0x108
 589 00f9 08       		.uleb128 0x8
 590 00fa 51020000 		.4byte	.LASF24
 591 00fe 01       		.byte	0x1
 592 00ff 1701     		.2byte	0x117
 593 0101 6B000000 		.4byte	0x6b
 594 0105 01       		.uleb128 0x1
 595 0106 50       		.byte	0x50
 596 0107 00       		.byte	0
 597 0108 09       		.uleb128 0x9
 598 0109 F8020000 		.4byte	.LASF19
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 21


 599 010d 01       		.byte	0x1
 600 010e 2E01     		.2byte	0x12e
 601 0110 00000000 		.4byte	.LFB5
 602 0114 0C000000 		.4byte	.LFE5-.LFB5
 603 0118 01       		.uleb128 0x1
 604 0119 9C       		.byte	0x9c
 605 011a 0A       		.uleb128 0xa
 606 011b 78020000 		.4byte	.LASF20
 607 011f 01       		.byte	0x1
 608 0120 4D01     		.2byte	0x14d
 609 0122 6B000000 		.4byte	0x6b
 610 0126 00000000 		.4byte	.LFB6
 611 012a 0C000000 		.4byte	.LFE6-.LFB6
 612 012e 01       		.uleb128 0x1
 613 012f 9C       		.byte	0x9c
 614 0130 0A       		.uleb128 0xa
 615 0131 95020000 		.4byte	.LASF21
 616 0135 01       		.byte	0x1
 617 0136 6401     		.2byte	0x164
 618 0138 6B000000 		.4byte	0x6b
 619 013c 00000000 		.4byte	.LFB7
 620 0140 0C000000 		.4byte	.LFE7-.LFB7
 621 0144 01       		.uleb128 0x1
 622 0145 9C       		.byte	0x9c
 623 0146 07       		.uleb128 0x7
 624 0147 E0000000 		.4byte	.LASF23
 625 014b 01       		.byte	0x1
 626 014c 7B01     		.2byte	0x17b
 627 014e 00000000 		.4byte	.LFB8
 628 0152 0C000000 		.4byte	.LFE8-.LFB8
 629 0156 01       		.uleb128 0x1
 630 0157 9C       		.byte	0x9c
 631 0158 6B010000 		.4byte	0x16b
 632 015c 08       		.uleb128 0x8
 633 015d B3020000 		.4byte	.LASF25
 634 0161 01       		.byte	0x1
 635 0162 7B01     		.2byte	0x17b
 636 0164 6B000000 		.4byte	0x6b
 637 0168 01       		.uleb128 0x1
 638 0169 50       		.byte	0x50
 639 016a 00       		.byte	0
 640 016b 0A       		.uleb128 0xa
 641 016c 51010000 		.4byte	.LASF26
 642 0170 01       		.byte	0x1
 643 0171 9501     		.2byte	0x195
 644 0173 6B000000 		.4byte	0x6b
 645 0177 00000000 		.4byte	.LFB9
 646 017b 0C000000 		.4byte	.LFE9-.LFB9
 647 017f 01       		.uleb128 0x1
 648 0180 9C       		.byte	0x9c
 649 0181 07       		.uleb128 0x7
 650 0182 7B000000 		.4byte	.LASF27
 651 0186 01       		.byte	0x1
 652 0187 AF01     		.2byte	0x1af
 653 0189 00000000 		.4byte	.LFB10
 654 018d 0C000000 		.4byte	.LFE10-.LFB10
 655 0191 01       		.uleb128 0x1
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 22


 656 0192 9C       		.byte	0x9c
 657 0193 B4010000 		.4byte	0x1b4
 658 0197 08       		.uleb128 0x8
 659 0198 61000000 		.4byte	.LASF28
 660 019c 01       		.byte	0x1
 661 019d AF01     		.2byte	0x1af
 662 019f 6B000000 		.4byte	0x6b
 663 01a3 01       		.uleb128 0x1
 664 01a4 50       		.byte	0x50
 665 01a5 0B       		.uleb128 0xb
 666 01a6 18020000 		.4byte	.LASF38
 667 01aa 01       		.byte	0x1
 668 01ab B201     		.2byte	0x1b2
 669 01ad 77000000 		.4byte	0x77
 670 01b1 01       		.uleb128 0x1
 671 01b2 50       		.byte	0x50
 672 01b3 00       		.byte	0
 673 01b4 0A       		.uleb128 0xa
 674 01b5 24020000 		.4byte	.LASF29
 675 01b9 01       		.byte	0x1
 676 01ba C801     		.2byte	0x1c8
 677 01bc 6B000000 		.4byte	0x6b
 678 01c0 00000000 		.4byte	.LFB11
 679 01c4 0C000000 		.4byte	.LFE11-.LFB11
 680 01c8 01       		.uleb128 0x1
 681 01c9 9C       		.byte	0x9c
 682 01ca 07       		.uleb128 0x7
 683 01cb 4A000000 		.4byte	.LASF30
 684 01cf 01       		.byte	0x1
 685 01d0 E001     		.2byte	0x1e0
 686 01d2 00000000 		.4byte	.LFB12
 687 01d6 0C000000 		.4byte	.LFE12-.LFB12
 688 01da 01       		.uleb128 0x1
 689 01db 9C       		.byte	0x9c
 690 01dc EF010000 		.4byte	0x1ef
 691 01e0 08       		.uleb128 0x8
 692 01e1 AD000000 		.4byte	.LASF31
 693 01e5 01       		.byte	0x1
 694 01e6 E001     		.2byte	0x1e0
 695 01e8 6B000000 		.4byte	0x6b
 696 01ec 01       		.uleb128 0x1
 697 01ed 50       		.byte	0x50
 698 01ee 00       		.byte	0
 699 01ef 0C       		.uleb128 0xc
 700 01f0 2B010000 		.4byte	.LASF32
 701 01f4 01       		.byte	0x1
 702 01f5 2B       		.byte	0x2b
 703 01f6 00000000 		.4byte	.LFB0
 704 01fa 6C000000 		.4byte	.LFE0-.LFB0
 705 01fe 01       		.uleb128 0x1
 706 01ff 9C       		.byte	0x9c
 707 0200 3C020000 		.4byte	0x23c
 708 0204 0D       		.uleb128 0xd
 709 0205 50000000 		.4byte	.LVL4
 710 0209 81010000 		.4byte	0x181
 711 020d 18020000 		.4byte	0x218
 712 0211 0E       		.uleb128 0xe
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 23


 713 0212 01       		.uleb128 0x1
 714 0213 50       		.byte	0x50
 715 0214 02       		.uleb128 0x2
 716 0215 09       		.byte	0x9
 717 0216 FF       		.byte	0xff
 718 0217 00       		.byte	0
 719 0218 0D       		.uleb128 0xd
 720 0219 56000000 		.4byte	.LVL5
 721 021d CA010000 		.4byte	0x1ca
 722 0221 2C020000 		.4byte	0x22c
 723 0225 0E       		.uleb128 0xe
 724 0226 01       		.uleb128 0x1
 725 0227 50       		.byte	0x50
 726 0228 02       		.uleb128 0x2
 727 0229 09       		.byte	0x9
 728 022a FF       		.byte	0xff
 729 022b 00       		.byte	0
 730 022c 0F       		.uleb128 0xf
 731 022d 5C000000 		.4byte	.LVL6
 732 0231 E3000000 		.4byte	0xe3
 733 0235 0E       		.uleb128 0xe
 734 0236 01       		.uleb128 0x1
 735 0237 50       		.byte	0x50
 736 0238 01       		.uleb128 0x1
 737 0239 38       		.byte	0x38
 738 023a 00       		.byte	0
 739 023b 00       		.byte	0
 740 023c 0C       		.uleb128 0xc
 741 023d 3A010000 		.4byte	.LASF33
 742 0241 01       		.byte	0x1
 743 0242 D7       		.byte	0xd7
 744 0243 00000000 		.4byte	.LFB2
 745 0247 1C000000 		.4byte	.LFE2-.LFB2
 746 024b 01       		.uleb128 0x1
 747 024c 9C       		.byte	0x9c
 748 024d 64020000 		.4byte	0x264
 749 0251 10       		.uleb128 0x10
 750 0252 0C000000 		.4byte	.LVL7
 751 0256 EF010000 		.4byte	0x1ef
 752 025a 10       		.uleb128 0x10
 753 025b 16000000 		.4byte	.LVL8
 754 025f C1000000 		.4byte	0xc1
 755 0263 00       		.byte	0
 756 0264 0A       		.uleb128 0xa
 757 0265 91000000 		.4byte	.LASF34
 758 0269 01       		.byte	0x1
 759 026a FC01     		.2byte	0x1fc
 760 026c 6B000000 		.4byte	0x6b
 761 0270 00000000 		.4byte	.LFB13
 762 0274 14000000 		.4byte	.LFE13-.LFB13
 763 0278 01       		.uleb128 0x1
 764 0279 9C       		.byte	0x9c
 765 027a 11       		.uleb128 0x11
 766 027b E6020000 		.4byte	.LASF39
 767 027f 01       		.byte	0x1
 768 0280 1A       		.byte	0x1a
 769 0281 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 24


 770 0285 05       		.uleb128 0x5
 771 0286 03       		.byte	0x3
 772 0287 00000000 		.4byte	PS2_Timer_initVar
 773 028b 00       		.byte	0
 774              		.section	.debug_abbrev,"",%progbits
 775              	.Ldebug_abbrev0:
 776 0000 01       		.uleb128 0x1
 777 0001 11       		.uleb128 0x11
 778 0002 01       		.byte	0x1
 779 0003 25       		.uleb128 0x25
 780 0004 0E       		.uleb128 0xe
 781 0005 13       		.uleb128 0x13
 782 0006 0B       		.uleb128 0xb
 783 0007 03       		.uleb128 0x3
 784 0008 0E       		.uleb128 0xe
 785 0009 1B       		.uleb128 0x1b
 786 000a 0E       		.uleb128 0xe
 787 000b 55       		.uleb128 0x55
 788 000c 17       		.uleb128 0x17
 789 000d 11       		.uleb128 0x11
 790 000e 01       		.uleb128 0x1
 791 000f 10       		.uleb128 0x10
 792 0010 17       		.uleb128 0x17
 793 0011 00       		.byte	0
 794 0012 00       		.byte	0
 795 0013 02       		.uleb128 0x2
 796 0014 24       		.uleb128 0x24
 797 0015 00       		.byte	0
 798 0016 0B       		.uleb128 0xb
 799 0017 0B       		.uleb128 0xb
 800 0018 3E       		.uleb128 0x3e
 801 0019 0B       		.uleb128 0xb
 802 001a 03       		.uleb128 0x3
 803 001b 0E       		.uleb128 0xe
 804 001c 00       		.byte	0
 805 001d 00       		.byte	0
 806 001e 03       		.uleb128 0x3
 807 001f 24       		.uleb128 0x24
 808 0020 00       		.byte	0
 809 0021 0B       		.uleb128 0xb
 810 0022 0B       		.uleb128 0xb
 811 0023 3E       		.uleb128 0x3e
 812 0024 0B       		.uleb128 0xb
 813 0025 03       		.uleb128 0x3
 814 0026 08       		.uleb128 0x8
 815 0027 00       		.byte	0
 816 0028 00       		.byte	0
 817 0029 04       		.uleb128 0x4
 818 002a 16       		.uleb128 0x16
 819 002b 00       		.byte	0
 820 002c 03       		.uleb128 0x3
 821 002d 0E       		.uleb128 0xe
 822 002e 3A       		.uleb128 0x3a
 823 002f 0B       		.uleb128 0xb
 824 0030 3B       		.uleb128 0x3b
 825 0031 05       		.uleb128 0x5
 826 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 25


 827 0033 13       		.uleb128 0x13
 828 0034 00       		.byte	0
 829 0035 00       		.byte	0
 830 0036 05       		.uleb128 0x5
 831 0037 35       		.uleb128 0x35
 832 0038 00       		.byte	0
 833 0039 49       		.uleb128 0x49
 834 003a 13       		.uleb128 0x13
 835 003b 00       		.byte	0
 836 003c 00       		.byte	0
 837 003d 06       		.uleb128 0x6
 838 003e 2E       		.uleb128 0x2e
 839 003f 00       		.byte	0
 840 0040 3F       		.uleb128 0x3f
 841 0041 19       		.uleb128 0x19
 842 0042 03       		.uleb128 0x3
 843 0043 0E       		.uleb128 0xe
 844 0044 3A       		.uleb128 0x3a
 845 0045 0B       		.uleb128 0xb
 846 0046 3B       		.uleb128 0x3b
 847 0047 0B       		.uleb128 0xb
 848 0048 27       		.uleb128 0x27
 849 0049 19       		.uleb128 0x19
 850 004a 11       		.uleb128 0x11
 851 004b 01       		.uleb128 0x1
 852 004c 12       		.uleb128 0x12
 853 004d 06       		.uleb128 0x6
 854 004e 40       		.uleb128 0x40
 855 004f 18       		.uleb128 0x18
 856 0050 9742     		.uleb128 0x2117
 857 0052 19       		.uleb128 0x19
 858 0053 00       		.byte	0
 859 0054 00       		.byte	0
 860 0055 07       		.uleb128 0x7
 861 0056 2E       		.uleb128 0x2e
 862 0057 01       		.byte	0x1
 863 0058 3F       		.uleb128 0x3f
 864 0059 19       		.uleb128 0x19
 865 005a 03       		.uleb128 0x3
 866 005b 0E       		.uleb128 0xe
 867 005c 3A       		.uleb128 0x3a
 868 005d 0B       		.uleb128 0xb
 869 005e 3B       		.uleb128 0x3b
 870 005f 05       		.uleb128 0x5
 871 0060 27       		.uleb128 0x27
 872 0061 19       		.uleb128 0x19
 873 0062 11       		.uleb128 0x11
 874 0063 01       		.uleb128 0x1
 875 0064 12       		.uleb128 0x12
 876 0065 06       		.uleb128 0x6
 877 0066 40       		.uleb128 0x40
 878 0067 18       		.uleb128 0x18
 879 0068 9742     		.uleb128 0x2117
 880 006a 19       		.uleb128 0x19
 881 006b 01       		.uleb128 0x1
 882 006c 13       		.uleb128 0x13
 883 006d 00       		.byte	0
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 26


 884 006e 00       		.byte	0
 885 006f 08       		.uleb128 0x8
 886 0070 05       		.uleb128 0x5
 887 0071 00       		.byte	0
 888 0072 03       		.uleb128 0x3
 889 0073 0E       		.uleb128 0xe
 890 0074 3A       		.uleb128 0x3a
 891 0075 0B       		.uleb128 0xb
 892 0076 3B       		.uleb128 0x3b
 893 0077 05       		.uleb128 0x5
 894 0078 49       		.uleb128 0x49
 895 0079 13       		.uleb128 0x13
 896 007a 02       		.uleb128 0x2
 897 007b 18       		.uleb128 0x18
 898 007c 00       		.byte	0
 899 007d 00       		.byte	0
 900 007e 09       		.uleb128 0x9
 901 007f 2E       		.uleb128 0x2e
 902 0080 00       		.byte	0
 903 0081 3F       		.uleb128 0x3f
 904 0082 19       		.uleb128 0x19
 905 0083 03       		.uleb128 0x3
 906 0084 0E       		.uleb128 0xe
 907 0085 3A       		.uleb128 0x3a
 908 0086 0B       		.uleb128 0xb
 909 0087 3B       		.uleb128 0x3b
 910 0088 05       		.uleb128 0x5
 911 0089 27       		.uleb128 0x27
 912 008a 19       		.uleb128 0x19
 913 008b 11       		.uleb128 0x11
 914 008c 01       		.uleb128 0x1
 915 008d 12       		.uleb128 0x12
 916 008e 06       		.uleb128 0x6
 917 008f 40       		.uleb128 0x40
 918 0090 18       		.uleb128 0x18
 919 0091 9742     		.uleb128 0x2117
 920 0093 19       		.uleb128 0x19
 921 0094 00       		.byte	0
 922 0095 00       		.byte	0
 923 0096 0A       		.uleb128 0xa
 924 0097 2E       		.uleb128 0x2e
 925 0098 00       		.byte	0
 926 0099 3F       		.uleb128 0x3f
 927 009a 19       		.uleb128 0x19
 928 009b 03       		.uleb128 0x3
 929 009c 0E       		.uleb128 0xe
 930 009d 3A       		.uleb128 0x3a
 931 009e 0B       		.uleb128 0xb
 932 009f 3B       		.uleb128 0x3b
 933 00a0 05       		.uleb128 0x5
 934 00a1 27       		.uleb128 0x27
 935 00a2 19       		.uleb128 0x19
 936 00a3 49       		.uleb128 0x49
 937 00a4 13       		.uleb128 0x13
 938 00a5 11       		.uleb128 0x11
 939 00a6 01       		.uleb128 0x1
 940 00a7 12       		.uleb128 0x12
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 27


 941 00a8 06       		.uleb128 0x6
 942 00a9 40       		.uleb128 0x40
 943 00aa 18       		.uleb128 0x18
 944 00ab 9742     		.uleb128 0x2117
 945 00ad 19       		.uleb128 0x19
 946 00ae 00       		.byte	0
 947 00af 00       		.byte	0
 948 00b0 0B       		.uleb128 0xb
 949 00b1 34       		.uleb128 0x34
 950 00b2 00       		.byte	0
 951 00b3 03       		.uleb128 0x3
 952 00b4 0E       		.uleb128 0xe
 953 00b5 3A       		.uleb128 0x3a
 954 00b6 0B       		.uleb128 0xb
 955 00b7 3B       		.uleb128 0x3b
 956 00b8 05       		.uleb128 0x5
 957 00b9 49       		.uleb128 0x49
 958 00ba 13       		.uleb128 0x13
 959 00bb 02       		.uleb128 0x2
 960 00bc 18       		.uleb128 0x18
 961 00bd 00       		.byte	0
 962 00be 00       		.byte	0
 963 00bf 0C       		.uleb128 0xc
 964 00c0 2E       		.uleb128 0x2e
 965 00c1 01       		.byte	0x1
 966 00c2 3F       		.uleb128 0x3f
 967 00c3 19       		.uleb128 0x19
 968 00c4 03       		.uleb128 0x3
 969 00c5 0E       		.uleb128 0xe
 970 00c6 3A       		.uleb128 0x3a
 971 00c7 0B       		.uleb128 0xb
 972 00c8 3B       		.uleb128 0x3b
 973 00c9 0B       		.uleb128 0xb
 974 00ca 27       		.uleb128 0x27
 975 00cb 19       		.uleb128 0x19
 976 00cc 11       		.uleb128 0x11
 977 00cd 01       		.uleb128 0x1
 978 00ce 12       		.uleb128 0x12
 979 00cf 06       		.uleb128 0x6
 980 00d0 40       		.uleb128 0x40
 981 00d1 18       		.uleb128 0x18
 982 00d2 9742     		.uleb128 0x2117
 983 00d4 19       		.uleb128 0x19
 984 00d5 01       		.uleb128 0x1
 985 00d6 13       		.uleb128 0x13
 986 00d7 00       		.byte	0
 987 00d8 00       		.byte	0
 988 00d9 0D       		.uleb128 0xd
 989 00da 898201   		.uleb128 0x4109
 990 00dd 01       		.byte	0x1
 991 00de 11       		.uleb128 0x11
 992 00df 01       		.uleb128 0x1
 993 00e0 31       		.uleb128 0x31
 994 00e1 13       		.uleb128 0x13
 995 00e2 01       		.uleb128 0x1
 996 00e3 13       		.uleb128 0x13
 997 00e4 00       		.byte	0
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 28


 998 00e5 00       		.byte	0
 999 00e6 0E       		.uleb128 0xe
 1000 00e7 8A8201   		.uleb128 0x410a
 1001 00ea 00       		.byte	0
 1002 00eb 02       		.uleb128 0x2
 1003 00ec 18       		.uleb128 0x18
 1004 00ed 9142     		.uleb128 0x2111
 1005 00ef 18       		.uleb128 0x18
 1006 00f0 00       		.byte	0
 1007 00f1 00       		.byte	0
 1008 00f2 0F       		.uleb128 0xf
 1009 00f3 898201   		.uleb128 0x4109
 1010 00f6 01       		.byte	0x1
 1011 00f7 11       		.uleb128 0x11
 1012 00f8 01       		.uleb128 0x1
 1013 00f9 31       		.uleb128 0x31
 1014 00fa 13       		.uleb128 0x13
 1015 00fb 00       		.byte	0
 1016 00fc 00       		.byte	0
 1017 00fd 10       		.uleb128 0x10
 1018 00fe 898201   		.uleb128 0x4109
 1019 0101 00       		.byte	0
 1020 0102 11       		.uleb128 0x11
 1021 0103 01       		.uleb128 0x1
 1022 0104 31       		.uleb128 0x31
 1023 0105 13       		.uleb128 0x13
 1024 0106 00       		.byte	0
 1025 0107 00       		.byte	0
 1026 0108 11       		.uleb128 0x11
 1027 0109 34       		.uleb128 0x34
 1028 010a 00       		.byte	0
 1029 010b 03       		.uleb128 0x3
 1030 010c 0E       		.uleb128 0xe
 1031 010d 3A       		.uleb128 0x3a
 1032 010e 0B       		.uleb128 0xb
 1033 010f 3B       		.uleb128 0x3b
 1034 0110 0B       		.uleb128 0xb
 1035 0111 49       		.uleb128 0x49
 1036 0112 13       		.uleb128 0x13
 1037 0113 3F       		.uleb128 0x3f
 1038 0114 19       		.uleb128 0x19
 1039 0115 02       		.uleb128 0x2
 1040 0116 18       		.uleb128 0x18
 1041 0117 00       		.byte	0
 1042 0118 00       		.byte	0
 1043 0119 00       		.byte	0
 1044              		.section	.debug_aranges,"",%progbits
 1045 0000 84000000 		.4byte	0x84
 1046 0004 0200     		.2byte	0x2
 1047 0006 00000000 		.4byte	.Ldebug_info0
 1048 000a 04       		.byte	0x4
 1049 000b 00       		.byte	0
 1050 000c 0000     		.2byte	0
 1051 000e 0000     		.2byte	0
 1052 0010 00000000 		.4byte	.LFB1
 1053 0014 28000000 		.4byte	.LFE1-.LFB1
 1054 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 29


 1055 001c 28000000 		.4byte	.LFE3-.LFB3
 1056 0020 00000000 		.4byte	.LFB4
 1057 0024 0C000000 		.4byte	.LFE4-.LFB4
 1058 0028 00000000 		.4byte	.LFB5
 1059 002c 0C000000 		.4byte	.LFE5-.LFB5
 1060 0030 00000000 		.4byte	.LFB6
 1061 0034 0C000000 		.4byte	.LFE6-.LFB6
 1062 0038 00000000 		.4byte	.LFB7
 1063 003c 0C000000 		.4byte	.LFE7-.LFB7
 1064 0040 00000000 		.4byte	.LFB8
 1065 0044 0C000000 		.4byte	.LFE8-.LFB8
 1066 0048 00000000 		.4byte	.LFB9
 1067 004c 0C000000 		.4byte	.LFE9-.LFB9
 1068 0050 00000000 		.4byte	.LFB10
 1069 0054 0C000000 		.4byte	.LFE10-.LFB10
 1070 0058 00000000 		.4byte	.LFB11
 1071 005c 0C000000 		.4byte	.LFE11-.LFB11
 1072 0060 00000000 		.4byte	.LFB12
 1073 0064 0C000000 		.4byte	.LFE12-.LFB12
 1074 0068 00000000 		.4byte	.LFB0
 1075 006c 6C000000 		.4byte	.LFE0-.LFB0
 1076 0070 00000000 		.4byte	.LFB2
 1077 0074 1C000000 		.4byte	.LFE2-.LFB2
 1078 0078 00000000 		.4byte	.LFB13
 1079 007c 14000000 		.4byte	.LFE13-.LFB13
 1080 0080 00000000 		.4byte	0
 1081 0084 00000000 		.4byte	0
 1082              		.section	.debug_ranges,"",%progbits
 1083              	.Ldebug_ranges0:
 1084 0000 00000000 		.4byte	.LFB1
 1085 0004 28000000 		.4byte	.LFE1
 1086 0008 00000000 		.4byte	.LFB3
 1087 000c 28000000 		.4byte	.LFE3
 1088 0010 00000000 		.4byte	.LFB4
 1089 0014 0C000000 		.4byte	.LFE4
 1090 0018 00000000 		.4byte	.LFB5
 1091 001c 0C000000 		.4byte	.LFE5
 1092 0020 00000000 		.4byte	.LFB6
 1093 0024 0C000000 		.4byte	.LFE6
 1094 0028 00000000 		.4byte	.LFB7
 1095 002c 0C000000 		.4byte	.LFE7
 1096 0030 00000000 		.4byte	.LFB8
 1097 0034 0C000000 		.4byte	.LFE8
 1098 0038 00000000 		.4byte	.LFB9
 1099 003c 0C000000 		.4byte	.LFE9
 1100 0040 00000000 		.4byte	.LFB10
 1101 0044 0C000000 		.4byte	.LFE10
 1102 0048 00000000 		.4byte	.LFB11
 1103 004c 0C000000 		.4byte	.LFE11
 1104 0050 00000000 		.4byte	.LFB12
 1105 0054 0C000000 		.4byte	.LFE12
 1106 0058 00000000 		.4byte	.LFB0
 1107 005c 6C000000 		.4byte	.LFE0
 1108 0060 00000000 		.4byte	.LFB2
 1109 0064 1C000000 		.4byte	.LFE2
 1110 0068 00000000 		.4byte	.LFB13
 1111 006c 14000000 		.4byte	.LFE13
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 30


 1112 0070 00000000 		.4byte	0
 1113 0074 00000000 		.4byte	0
 1114              		.section	.debug_line,"",%progbits
 1115              	.Ldebug_line0:
 1116 0000 56010000 		.section	.debug_str,"MS",%progbits,1
 1116      02004800 
 1116      00000201 
 1116      FB0E0D00 
 1116      01010101 
 1117              	.LASF15:
 1118 0000 72656731 		.ascii	"reg16\000"
 1118      3600
 1119              	.LASF37:
 1120 0006 433A5C55 		.ascii	"C:\\Users\\addis\\Documents\\PSoC Creator\\Workspac"
 1120      73657273 
 1120      5C616464 
 1120      69735C44 
 1120      6F63756D 
 1121 0034 6530325C 		.ascii	"e02\\PS2Keyboard.cydsn\000"
 1121      5053324B 
 1121      6579626F 
 1121      6172642E 
 1121      63796473 
 1122              	.LASF30:
 1123 004a 5053325F 		.ascii	"PS2_Timer_WriteCounter\000"
 1123      54696D65 
 1123      725F5772 
 1123      69746543 
 1123      6F756E74 
 1124              	.LASF28:
 1125 0061 70657269 		.ascii	"period\000"
 1125      6F6400
 1126              	.LASF3:
 1127 0068 73686F72 		.ascii	"short unsigned int\000"
 1127      7420756E 
 1127      7369676E 
 1127      65642069 
 1127      6E7400
 1128              	.LASF27:
 1129 007b 5053325F 		.ascii	"PS2_Timer_WritePeriod\000"
 1129      54696D65 
 1129      725F5772 
 1129      69746550 
 1129      6572696F 
 1130              	.LASF34:
 1131 0091 5053325F 		.ascii	"PS2_Timer_ReadCounter\000"
 1131      54696D65 
 1131      725F5265 
 1131      6164436F 
 1131      756E7465 
 1132              	.LASF11:
 1133 00a7 666C6F61 		.ascii	"float\000"
 1133      7400
 1134              	.LASF31:
 1135 00ad 636F756E 		.ascii	"counter\000"
 1135      74657200 
 1136              	.LASF1:
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 31


 1137 00b5 756E7369 		.ascii	"unsigned char\000"
 1137      676E6564 
 1137      20636861 
 1137      7200
 1138              	.LASF14:
 1139 00c3 72656738 		.ascii	"reg8\000"
 1139      00
 1140              	.LASF5:
 1141 00c8 6C6F6E67 		.ascii	"long unsigned int\000"
 1141      20756E73 
 1141      69676E65 
 1141      6420696E 
 1141      7400
 1142              	.LASF9:
 1143 00da 75696E74 		.ascii	"uint8\000"
 1143      3800
 1144              	.LASF23:
 1145 00e0 5053325F 		.ascii	"PS2_Timer_WriteControlRegister\000"
 1145      54696D65 
 1145      725F5772 
 1145      69746543 
 1145      6F6E7472 
 1146              	.LASF36:
 1147 00ff 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PS2_Timer.c\000"
 1147      6E657261 
 1147      7465645F 
 1147      536F7572 
 1147      63655C50 
 1148              	.LASF12:
 1149 0124 646F7562 		.ascii	"double\000"
 1149      6C6500
 1150              	.LASF32:
 1151 012b 5053325F 		.ascii	"PS2_Timer_Init\000"
 1151      54696D65 
 1151      725F496E 
 1151      697400
 1152              	.LASF33:
 1153 013a 5053325F 		.ascii	"PS2_Timer_Start\000"
 1153      54696D65 
 1153      725F5374 
 1153      61727400 
 1154              	.LASF10:
 1155 014a 75696E74 		.ascii	"uint16\000"
 1155      313600
 1156              	.LASF26:
 1157 0151 5053325F 		.ascii	"PS2_Timer_ReadPeriod\000"
 1157      54696D65 
 1157      725F5265 
 1157      61645065 
 1157      72696F64 
 1158              	.LASF8:
 1159 0166 756E7369 		.ascii	"unsigned int\000"
 1159      676E6564 
 1159      20696E74 
 1159      00
 1160              	.LASF7:
 1161 0173 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 32


 1161      206C6F6E 
 1161      6720756E 
 1161      7369676E 
 1161      65642069 
 1162              	.LASF35:
 1163 018a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1163      4320342E 
 1163      392E3320 
 1163      32303135 
 1163      30333033 
 1164 01bd 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1164      20726576 
 1164      6973696F 
 1164      6E203232 
 1164      31323230 
 1165 01f0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1165      66756E63 
 1165      74696F6E 
 1165      2D736563 
 1165      74696F6E 
 1166              	.LASF38:
 1167 0218 70657269 		.ascii	"period_temp\000"
 1167      6F645F74 
 1167      656D7000 
 1168              	.LASF29:
 1169 0224 5053325F 		.ascii	"PS2_Timer_ReadCapture\000"
 1169      54696D65 
 1169      725F5265 
 1169      61644361 
 1169      70747572 
 1170              	.LASF16:
 1171 023a 73697A65 		.ascii	"sizetype\000"
 1171      74797065 
 1171      00
 1172              	.LASF6:
 1173 0243 6C6F6E67 		.ascii	"long long int\000"
 1173      206C6F6E 
 1173      6720696E 
 1173      7400
 1174              	.LASF24:
 1175 0251 696E7465 		.ascii	"interruptMode\000"
 1175      72727570 
 1175      744D6F64 
 1175      6500
 1176              	.LASF18:
 1177 025f 5053325F 		.ascii	"PS2_Timer_Stop\000"
 1177      54696D65 
 1177      725F5374 
 1177      6F7000
 1178              	.LASF2:
 1179 026e 73686F72 		.ascii	"short int\000"
 1179      7420696E 
 1179      7400
 1180              	.LASF20:
 1181 0278 5053325F 		.ascii	"PS2_Timer_ReadStatusRegister\000"
 1181      54696D65 
 1181      725F5265 
ARM GAS  C:\Users\addis\AppData\Local\Temp\ccWAQS9P.s 			page 33


 1181      61645374 
 1181      61747573 
 1182              	.LASF21:
 1183 0295 5053325F 		.ascii	"PS2_Timer_ReadControlRegister\000"
 1183      54696D65 
 1183      725F5265 
 1183      6164436F 
 1183      6E74726F 
 1184              	.LASF25:
 1185 02b3 636F6E74 		.ascii	"control\000"
 1185      726F6C00 
 1186              	.LASF4:
 1187 02bb 6C6F6E67 		.ascii	"long int\000"
 1187      20696E74 
 1187      00
 1188              	.LASF13:
 1189 02c4 63686172 		.ascii	"char\000"
 1189      00
 1190              	.LASF0:
 1191 02c9 7369676E 		.ascii	"signed char\000"
 1191      65642063 
 1191      68617200 
 1192              	.LASF17:
 1193 02d5 5053325F 		.ascii	"PS2_Timer_Enable\000"
 1193      54696D65 
 1193      725F456E 
 1193      61626C65 
 1193      00
 1194              	.LASF39:
 1195 02e6 5053325F 		.ascii	"PS2_Timer_initVar\000"
 1195      54696D65 
 1195      725F696E 
 1195      69745661 
 1195      7200
 1196              	.LASF19:
 1197 02f8 5053325F 		.ascii	"PS2_Timer_SoftwareCapture\000"
 1197      54696D65 
 1197      725F536F 
 1197      66747761 
 1197      72654361 
 1198              	.LASF22:
 1199 0312 5053325F 		.ascii	"PS2_Timer_SetInterruptMode\000"
 1199      54696D65 
 1199      725F5365 
 1199      74496E74 
 1199      65727275 
 1200              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
