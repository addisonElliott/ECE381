//*****************************************************************************
//*****************************************************************************
//  FILENAME: MotorDriver.h
//   Version: 2.5, Updated on 2015/3/4 at 22:23:43
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: Counter16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef MotorDriver_INCLUDE
#define MotorDriver_INCLUDE

#include <m8c.h>

#pragma fastcall16 MotorDriver_EnableInt
#pragma fastcall16 MotorDriver_DisableInt
#pragma fastcall16 MotorDriver_Start
#pragma fastcall16 MotorDriver_Stop
#pragma fastcall16 MotorDriver_wReadCounter              // Read  DR0
#pragma fastcall16 MotorDriver_WritePeriod               // Write DR1
#pragma fastcall16 MotorDriver_wReadCompareValue         // Read  DR2
#pragma fastcall16 MotorDriver_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wMotorDriver_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 wMotorDriver_ReadCompareValue         // Read  DR2 (Deprecated)

//-------------------------------------------------
// Prototypes of the MotorDriver API.
//-------------------------------------------------
extern void MotorDriver_EnableInt(void);                           // Proxy Class 1
extern void MotorDriver_DisableInt(void);                          // Proxy Class 1
extern void MotorDriver_Start(void);                               // Proxy Class 1
extern void MotorDriver_Stop(void);                                // Proxy Class 1
extern WORD MotorDriver_wReadCounter(void);                        // Proxy Class 2
extern void MotorDriver_WritePeriod(WORD wPeriod);                 // Proxy Class 1
extern WORD MotorDriver_wReadCompareValue(void);                   // Proxy Class 1
extern void MotorDriver_WriteCompareValue(WORD wCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wMotorDriver_ReadCounter(void);            // Deprecated
extern WORD wMotorDriver_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for MotorDriver API's.
//--------------------------------------------------

#define MotorDriver_CONTROL_REG_START_BIT      ( 0x01 )
#define MotorDriver_INT_REG_ADDR               ( 0x0e1 )
#define MotorDriver_INT_MASK                   ( 0x02 )


//--------------------------------------------------
// Constants for MotorDriver user defined values
//--------------------------------------------------

#define MotorDriver_PERIOD                     ( 0x9e )
#define MotorDriver_COMPARE_VALUE              ( 0x4f )


//-------------------------------------------------
// Register Addresses for MotorDriver
//-------------------------------------------------

#pragma ioport  MotorDriver_COUNTER_LSB_REG:    0x020      //DR0 Counter register LSB
BYTE            MotorDriver_COUNTER_LSB_REG;
#pragma ioport  MotorDriver_COUNTER_MSB_REG:    0x024      //DR0 Counter register MSB
BYTE            MotorDriver_COUNTER_MSB_REG;
#pragma ioport  MotorDriver_PERIOD_LSB_REG: 0x021          //DR1 Period register LSB
BYTE            MotorDriver_PERIOD_LSB_REG;
#pragma ioport  MotorDriver_PERIOD_MSB_REG: 0x025          //DR1 Period register MSB
BYTE            MotorDriver_PERIOD_MSB_REG;
#pragma ioport  MotorDriver_COMPARE_LSB_REG:    0x022      //DR2 Compare register LSB
BYTE            MotorDriver_COMPARE_LSB_REG;
#pragma ioport  MotorDriver_COMPARE_MSB_REG:    0x026      //DR2 Compare register MSB
BYTE            MotorDriver_COMPARE_MSB_REG;
#pragma ioport  MotorDriver_CONTROL_LSB_REG:    0x023      //Control register LSB
BYTE            MotorDriver_CONTROL_LSB_REG;
#pragma ioport  MotorDriver_CONTROL_MSB_REG:    0x027      //Control register MSB
BYTE            MotorDriver_CONTROL_MSB_REG;
#pragma ioport  MotorDriver_FUNC_LSB_REG:   0x120          //Function register LSB
BYTE            MotorDriver_FUNC_LSB_REG;
#pragma ioport  MotorDriver_FUNC_MSB_REG:   0x124          //Function register MSB
BYTE            MotorDriver_FUNC_MSB_REG;
#pragma ioport  MotorDriver_INPUT_LSB_REG:  0x121          //Input register LSB
BYTE            MotorDriver_INPUT_LSB_REG;
#pragma ioport  MotorDriver_INPUT_MSB_REG:  0x125          //Input register MSB
BYTE            MotorDriver_INPUT_MSB_REG;
#pragma ioport  MotorDriver_OUTPUT_LSB_REG: 0x122          //Output register LSB
BYTE            MotorDriver_OUTPUT_LSB_REG;
#pragma ioport  MotorDriver_OUTPUT_MSB_REG: 0x126          //Output register MSB
BYTE            MotorDriver_OUTPUT_MSB_REG;
#pragma ioport  MotorDriver_INT_REG:       0x0e1           //Interrupt Mask Register
BYTE            MotorDriver_INT_REG;


//-------------------------------------------------
// MotorDriver Macro 'Functions'
//-------------------------------------------------

#define MotorDriver_Start_M \
   ( MotorDriver_CONTROL_LSB_REG |=  MotorDriver_CONTROL_REG_START_BIT )

#define MotorDriver_Stop_M  \
   ( MotorDriver_CONTROL_LSB_REG &= ~MotorDriver_CONTROL_REG_START_BIT )

#define MotorDriver_EnableInt_M   \
   M8C_EnableIntMask(  MotorDriver_INT_REG, MotorDriver_INT_MASK )

#define MotorDriver_DisableInt_M  \
   M8C_DisableIntMask( MotorDriver_INT_REG, MotorDriver_INT_MASK )

#endif
// end of file MotorDriver.h
