/******************************************************************************
*  Generated by PSoC Designer 5.4.3191
******************************************************************************/
#include <m8c.h>
/*
*   PSoCGPIOINT.h
*   Data: 04 June, 2002
*   Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
*
*  This file is generated by the Device Editor on Application Generation.
*  It contains equates that are useful in writing code relating to GPIO
*  related values.
*  
*  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
*  Edits to this file will not be preserved.
*/
// Tout address and mask defines
#pragma	ioport	Tout_Data_ADDR:	0x4
BYTE			Tout_Data_ADDR;
#pragma	ioport	Tout_DriveMode_0_ADDR:	0x104
BYTE			Tout_DriveMode_0_ADDR;
#pragma	ioport	Tout_DriveMode_1_ADDR:	0x105
BYTE			Tout_DriveMode_1_ADDR;
#pragma	ioport	Tout_DriveMode_2_ADDR:	0x7
BYTE			Tout_DriveMode_2_ADDR;
#pragma	ioport	Tout_GlobalSelect_ADDR:	0x6
BYTE			Tout_GlobalSelect_ADDR;
#pragma	ioport	Tout_IntCtrl_0_ADDR:	0x106
BYTE			Tout_IntCtrl_0_ADDR;
#pragma	ioport	Tout_IntCtrl_1_ADDR:	0x107
BYTE			Tout_IntCtrl_1_ADDR;
#pragma	ioport	Tout_IntEn_ADDR:	0x5
BYTE			Tout_IntEn_ADDR;
#define Tout_MASK 0x10
// Motor1 address and mask defines
#pragma	ioport	Motor1_Data_ADDR:	0x0
BYTE			Motor1_Data_ADDR;
#pragma	ioport	Motor1_DriveMode_0_ADDR:	0x100
BYTE			Motor1_DriveMode_0_ADDR;
#pragma	ioport	Motor1_DriveMode_1_ADDR:	0x101
BYTE			Motor1_DriveMode_1_ADDR;
#pragma	ioport	Motor1_DriveMode_2_ADDR:	0x3
BYTE			Motor1_DriveMode_2_ADDR;
#pragma	ioport	Motor1_GlobalSelect_ADDR:	0x2
BYTE			Motor1_GlobalSelect_ADDR;
#pragma	ioport	Motor1_IntCtrl_0_ADDR:	0x102
BYTE			Motor1_IntCtrl_0_ADDR;
#pragma	ioport	Motor1_IntCtrl_1_ADDR:	0x103
BYTE			Motor1_IntCtrl_1_ADDR;
#pragma	ioport	Motor1_IntEn_ADDR:	0x1
BYTE			Motor1_IntEn_ADDR;
#define Motor1_MASK 0x1
// Motor2 address and mask defines
#pragma	ioport	Motor2_Data_ADDR:	0x0
BYTE			Motor2_Data_ADDR;
#pragma	ioport	Motor2_DriveMode_0_ADDR:	0x100
BYTE			Motor2_DriveMode_0_ADDR;
#pragma	ioport	Motor2_DriveMode_1_ADDR:	0x101
BYTE			Motor2_DriveMode_1_ADDR;
#pragma	ioport	Motor2_DriveMode_2_ADDR:	0x3
BYTE			Motor2_DriveMode_2_ADDR;
#pragma	ioport	Motor2_GlobalSelect_ADDR:	0x2
BYTE			Motor2_GlobalSelect_ADDR;
#pragma	ioport	Motor2_IntCtrl_0_ADDR:	0x102
BYTE			Motor2_IntCtrl_0_ADDR;
#pragma	ioport	Motor2_IntCtrl_1_ADDR:	0x103
BYTE			Motor2_IntCtrl_1_ADDR;
#pragma	ioport	Motor2_IntEn_ADDR:	0x1
BYTE			Motor2_IntEn_ADDR;
#define Motor2_MASK 0x2
// Motor3 address and mask defines
#pragma	ioport	Motor3_Data_ADDR:	0x0
BYTE			Motor3_Data_ADDR;
#pragma	ioport	Motor3_DriveMode_0_ADDR:	0x100
BYTE			Motor3_DriveMode_0_ADDR;
#pragma	ioport	Motor3_DriveMode_1_ADDR:	0x101
BYTE			Motor3_DriveMode_1_ADDR;
#pragma	ioport	Motor3_DriveMode_2_ADDR:	0x3
BYTE			Motor3_DriveMode_2_ADDR;
#pragma	ioport	Motor3_GlobalSelect_ADDR:	0x2
BYTE			Motor3_GlobalSelect_ADDR;
#pragma	ioport	Motor3_IntCtrl_0_ADDR:	0x102
BYTE			Motor3_IntCtrl_0_ADDR;
#pragma	ioport	Motor3_IntCtrl_1_ADDR:	0x103
BYTE			Motor3_IntCtrl_1_ADDR;
#pragma	ioport	Motor3_IntEn_ADDR:	0x1
BYTE			Motor3_IntEn_ADDR;
#define Motor3_MASK 0x4
// Motor4 address and mask defines
#pragma	ioport	Motor4_Data_ADDR:	0x0
BYTE			Motor4_Data_ADDR;
#pragma	ioport	Motor4_DriveMode_0_ADDR:	0x100
BYTE			Motor4_DriveMode_0_ADDR;
#pragma	ioport	Motor4_DriveMode_1_ADDR:	0x101
BYTE			Motor4_DriveMode_1_ADDR;
#pragma	ioport	Motor4_DriveMode_2_ADDR:	0x3
BYTE			Motor4_DriveMode_2_ADDR;
#pragma	ioport	Motor4_GlobalSelect_ADDR:	0x2
BYTE			Motor4_GlobalSelect_ADDR;
#pragma	ioport	Motor4_IntCtrl_0_ADDR:	0x102
BYTE			Motor4_IntCtrl_0_ADDR;
#pragma	ioport	Motor4_IntCtrl_1_ADDR:	0x103
BYTE			Motor4_IntCtrl_1_ADDR;
#pragma	ioport	Motor4_IntEn_ADDR:	0x1
BYTE			Motor4_IntEn_ADDR;
#define Motor4_MASK 0x8
// I2CHWSDA address and mask defines
#pragma	ioport	I2CHWSDA_Data_ADDR:	0x4
BYTE			I2CHWSDA_Data_ADDR;
#pragma	ioport	I2CHWSDA_DriveMode_0_ADDR:	0x104
BYTE			I2CHWSDA_DriveMode_0_ADDR;
#pragma	ioport	I2CHWSDA_DriveMode_1_ADDR:	0x105
BYTE			I2CHWSDA_DriveMode_1_ADDR;
#pragma	ioport	I2CHWSDA_DriveMode_2_ADDR:	0x7
BYTE			I2CHWSDA_DriveMode_2_ADDR;
#pragma	ioport	I2CHWSDA_GlobalSelect_ADDR:	0x6
BYTE			I2CHWSDA_GlobalSelect_ADDR;
#pragma	ioport	I2CHWSDA_IntCtrl_0_ADDR:	0x106
BYTE			I2CHWSDA_IntCtrl_0_ADDR;
#pragma	ioport	I2CHWSDA_IntCtrl_1_ADDR:	0x107
BYTE			I2CHWSDA_IntCtrl_1_ADDR;
#pragma	ioport	I2CHWSDA_IntEn_ADDR:	0x5
BYTE			I2CHWSDA_IntEn_ADDR;
#define I2CHWSDA_MASK 0x20
// UART_RX_IN address and mask defines
#pragma	ioport	UART_RX_IN_Data_ADDR:	0x4
BYTE			UART_RX_IN_Data_ADDR;
#pragma	ioport	UART_RX_IN_DriveMode_0_ADDR:	0x104
BYTE			UART_RX_IN_DriveMode_0_ADDR;
#pragma	ioport	UART_RX_IN_DriveMode_1_ADDR:	0x105
BYTE			UART_RX_IN_DriveMode_1_ADDR;
#pragma	ioport	UART_RX_IN_DriveMode_2_ADDR:	0x7
BYTE			UART_RX_IN_DriveMode_2_ADDR;
#pragma	ioport	UART_RX_IN_GlobalSelect_ADDR:	0x6
BYTE			UART_RX_IN_GlobalSelect_ADDR;
#pragma	ioport	UART_RX_IN_IntCtrl_0_ADDR:	0x106
BYTE			UART_RX_IN_IntCtrl_0_ADDR;
#pragma	ioport	UART_RX_IN_IntCtrl_1_ADDR:	0x107
BYTE			UART_RX_IN_IntCtrl_1_ADDR;
#pragma	ioport	UART_RX_IN_IntEn_ADDR:	0x5
BYTE			UART_RX_IN_IntEn_ADDR;
#define UART_RX_IN_MASK 0x40
// I2CHWSCL address and mask defines
#pragma	ioport	I2CHWSCL_Data_ADDR:	0x4
BYTE			I2CHWSCL_Data_ADDR;
#pragma	ioport	I2CHWSCL_DriveMode_0_ADDR:	0x104
BYTE			I2CHWSCL_DriveMode_0_ADDR;
#pragma	ioport	I2CHWSCL_DriveMode_1_ADDR:	0x105
BYTE			I2CHWSCL_DriveMode_1_ADDR;
#pragma	ioport	I2CHWSCL_DriveMode_2_ADDR:	0x7
BYTE			I2CHWSCL_DriveMode_2_ADDR;
#pragma	ioport	I2CHWSCL_GlobalSelect_ADDR:	0x6
BYTE			I2CHWSCL_GlobalSelect_ADDR;
#pragma	ioport	I2CHWSCL_IntCtrl_0_ADDR:	0x106
BYTE			I2CHWSCL_IntCtrl_0_ADDR;
#pragma	ioport	I2CHWSCL_IntCtrl_1_ADDR:	0x107
BYTE			I2CHWSCL_IntCtrl_1_ADDR;
#pragma	ioport	I2CHWSCL_IntEn_ADDR:	0x5
BYTE			I2CHWSCL_IntEn_ADDR;
#define I2CHWSCL_MASK 0x80
// LCDD4 address and mask defines
#pragma	ioport	LCDD4_Data_ADDR:	0x8
BYTE			LCDD4_Data_ADDR;
#pragma	ioport	LCDD4_DriveMode_0_ADDR:	0x108
BYTE			LCDD4_DriveMode_0_ADDR;
#pragma	ioport	LCDD4_DriveMode_1_ADDR:	0x109
BYTE			LCDD4_DriveMode_1_ADDR;
#pragma	ioport	LCDD4_DriveMode_2_ADDR:	0xb
BYTE			LCDD4_DriveMode_2_ADDR;
#pragma	ioport	LCDD4_GlobalSelect_ADDR:	0xa
BYTE			LCDD4_GlobalSelect_ADDR;
#pragma	ioport	LCDD4_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD4_IntCtrl_0_ADDR;
#pragma	ioport	LCDD4_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD4_IntCtrl_1_ADDR;
#pragma	ioport	LCDD4_IntEn_ADDR:	0x9
BYTE			LCDD4_IntEn_ADDR;
#define LCDD4_MASK 0x1
// LCDD4 Shadow defines
//   LCDD4_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD4_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD4_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD4_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD4_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD4_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD5 address and mask defines
#pragma	ioport	LCDD5_Data_ADDR:	0x8
BYTE			LCDD5_Data_ADDR;
#pragma	ioport	LCDD5_DriveMode_0_ADDR:	0x108
BYTE			LCDD5_DriveMode_0_ADDR;
#pragma	ioport	LCDD5_DriveMode_1_ADDR:	0x109
BYTE			LCDD5_DriveMode_1_ADDR;
#pragma	ioport	LCDD5_DriveMode_2_ADDR:	0xb
BYTE			LCDD5_DriveMode_2_ADDR;
#pragma	ioport	LCDD5_GlobalSelect_ADDR:	0xa
BYTE			LCDD5_GlobalSelect_ADDR;
#pragma	ioport	LCDD5_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD5_IntCtrl_0_ADDR;
#pragma	ioport	LCDD5_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD5_IntCtrl_1_ADDR;
#pragma	ioport	LCDD5_IntEn_ADDR:	0x9
BYTE			LCDD5_IntEn_ADDR;
#define LCDD5_MASK 0x2
// LCDD5 Shadow defines
//   LCDD5_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD5_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD5_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD5_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD5_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD5_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD6 address and mask defines
#pragma	ioport	LCDD6_Data_ADDR:	0x8
BYTE			LCDD6_Data_ADDR;
#pragma	ioport	LCDD6_DriveMode_0_ADDR:	0x108
BYTE			LCDD6_DriveMode_0_ADDR;
#pragma	ioport	LCDD6_DriveMode_1_ADDR:	0x109
BYTE			LCDD6_DriveMode_1_ADDR;
#pragma	ioport	LCDD6_DriveMode_2_ADDR:	0xb
BYTE			LCDD6_DriveMode_2_ADDR;
#pragma	ioport	LCDD6_GlobalSelect_ADDR:	0xa
BYTE			LCDD6_GlobalSelect_ADDR;
#pragma	ioport	LCDD6_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD6_IntCtrl_0_ADDR;
#pragma	ioport	LCDD6_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD6_IntCtrl_1_ADDR;
#pragma	ioport	LCDD6_IntEn_ADDR:	0x9
BYTE			LCDD6_IntEn_ADDR;
#define LCDD6_MASK 0x4
// LCDD6 Shadow defines
//   LCDD6_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD6_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD6_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD6_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD6_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD6_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDD7 address and mask defines
#pragma	ioport	LCDD7_Data_ADDR:	0x8
BYTE			LCDD7_Data_ADDR;
#pragma	ioport	LCDD7_DriveMode_0_ADDR:	0x108
BYTE			LCDD7_DriveMode_0_ADDR;
#pragma	ioport	LCDD7_DriveMode_1_ADDR:	0x109
BYTE			LCDD7_DriveMode_1_ADDR;
#pragma	ioport	LCDD7_DriveMode_2_ADDR:	0xb
BYTE			LCDD7_DriveMode_2_ADDR;
#pragma	ioport	LCDD7_GlobalSelect_ADDR:	0xa
BYTE			LCDD7_GlobalSelect_ADDR;
#pragma	ioport	LCDD7_IntCtrl_0_ADDR:	0x10a
BYTE			LCDD7_IntCtrl_0_ADDR;
#pragma	ioport	LCDD7_IntCtrl_1_ADDR:	0x10b
BYTE			LCDD7_IntCtrl_1_ADDR;
#pragma	ioport	LCDD7_IntEn_ADDR:	0x9
BYTE			LCDD7_IntEn_ADDR;
#define LCDD7_MASK 0x8
// LCDD7 Shadow defines
//   LCDD7_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDD7_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDD7_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDD7_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDD7_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDD7_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDE address and mask defines
#pragma	ioport	LCDE_Data_ADDR:	0x8
BYTE			LCDE_Data_ADDR;
#pragma	ioport	LCDE_DriveMode_0_ADDR:	0x108
BYTE			LCDE_DriveMode_0_ADDR;
#pragma	ioport	LCDE_DriveMode_1_ADDR:	0x109
BYTE			LCDE_DriveMode_1_ADDR;
#pragma	ioport	LCDE_DriveMode_2_ADDR:	0xb
BYTE			LCDE_DriveMode_2_ADDR;
#pragma	ioport	LCDE_GlobalSelect_ADDR:	0xa
BYTE			LCDE_GlobalSelect_ADDR;
#pragma	ioport	LCDE_IntCtrl_0_ADDR:	0x10a
BYTE			LCDE_IntCtrl_0_ADDR;
#pragma	ioport	LCDE_IntCtrl_1_ADDR:	0x10b
BYTE			LCDE_IntCtrl_1_ADDR;
#pragma	ioport	LCDE_IntEn_ADDR:	0x9
BYTE			LCDE_IntEn_ADDR;
#define LCDE_MASK 0x10
// LCDE Shadow defines
//   LCDE_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDE_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDE_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDE_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDE_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDE_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDRS address and mask defines
#pragma	ioport	LCDRS_Data_ADDR:	0x8
BYTE			LCDRS_Data_ADDR;
#pragma	ioport	LCDRS_DriveMode_0_ADDR:	0x108
BYTE			LCDRS_DriveMode_0_ADDR;
#pragma	ioport	LCDRS_DriveMode_1_ADDR:	0x109
BYTE			LCDRS_DriveMode_1_ADDR;
#pragma	ioport	LCDRS_DriveMode_2_ADDR:	0xb
BYTE			LCDRS_DriveMode_2_ADDR;
#pragma	ioport	LCDRS_GlobalSelect_ADDR:	0xa
BYTE			LCDRS_GlobalSelect_ADDR;
#pragma	ioport	LCDRS_IntCtrl_0_ADDR:	0x10a
BYTE			LCDRS_IntCtrl_0_ADDR;
#pragma	ioport	LCDRS_IntCtrl_1_ADDR:	0x10b
BYTE			LCDRS_IntCtrl_1_ADDR;
#pragma	ioport	LCDRS_IntEn_ADDR:	0x9
BYTE			LCDRS_IntEn_ADDR;
#define LCDRS_MASK 0x20
// LCDRS Shadow defines
//   LCDRS_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDRS_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDRS_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDRS_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDRS_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDRS_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// LCDRW address and mask defines
#pragma	ioport	LCDRW_Data_ADDR:	0x8
BYTE			LCDRW_Data_ADDR;
#pragma	ioport	LCDRW_DriveMode_0_ADDR:	0x108
BYTE			LCDRW_DriveMode_0_ADDR;
#pragma	ioport	LCDRW_DriveMode_1_ADDR:	0x109
BYTE			LCDRW_DriveMode_1_ADDR;
#pragma	ioport	LCDRW_DriveMode_2_ADDR:	0xb
BYTE			LCDRW_DriveMode_2_ADDR;
#pragma	ioport	LCDRW_GlobalSelect_ADDR:	0xa
BYTE			LCDRW_GlobalSelect_ADDR;
#pragma	ioport	LCDRW_IntCtrl_0_ADDR:	0x10a
BYTE			LCDRW_IntCtrl_0_ADDR;
#pragma	ioport	LCDRW_IntCtrl_1_ADDR:	0x10b
BYTE			LCDRW_IntCtrl_1_ADDR;
#pragma	ioport	LCDRW_IntEn_ADDR:	0x9
BYTE			LCDRW_IntEn_ADDR;
#define LCDRW_MASK 0x40
// LCDRW Shadow defines
//   LCDRW_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define LCDRW_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   LCDRW_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define LCDRW_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   LCDRW_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define LCDRW_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
// UART_TX_OUT address and mask defines
#pragma	ioport	UART_TX_OUT_Data_ADDR:	0x8
BYTE			UART_TX_OUT_Data_ADDR;
#pragma	ioport	UART_TX_OUT_DriveMode_0_ADDR:	0x108
BYTE			UART_TX_OUT_DriveMode_0_ADDR;
#pragma	ioport	UART_TX_OUT_DriveMode_1_ADDR:	0x109
BYTE			UART_TX_OUT_DriveMode_1_ADDR;
#pragma	ioport	UART_TX_OUT_DriveMode_2_ADDR:	0xb
BYTE			UART_TX_OUT_DriveMode_2_ADDR;
#pragma	ioport	UART_TX_OUT_GlobalSelect_ADDR:	0xa
BYTE			UART_TX_OUT_GlobalSelect_ADDR;
#pragma	ioport	UART_TX_OUT_IntCtrl_0_ADDR:	0x10a
BYTE			UART_TX_OUT_IntCtrl_0_ADDR;
#pragma	ioport	UART_TX_OUT_IntCtrl_1_ADDR:	0x10b
BYTE			UART_TX_OUT_IntCtrl_1_ADDR;
#pragma	ioport	UART_TX_OUT_IntEn_ADDR:	0x9
BYTE			UART_TX_OUT_IntEn_ADDR;
#define UART_TX_OUT_MASK 0x80
// UART_TX_OUT Shadow defines
//   UART_TX_OUT_DataShadow define
extern BYTE Port_2_Data_SHADE;
#define UART_TX_OUT_DataShadow (*(unsigned char*)&Port_2_Data_SHADE)
//   UART_TX_OUT_DriveMode_0Shadow define
extern BYTE Port_2_DriveMode_0_SHADE;
#define UART_TX_OUT_DriveMode_0Shadow (*(unsigned char*)&Port_2_DriveMode_0_SHADE)
//   UART_TX_OUT_DriveMode_1Shadow define
extern BYTE Port_2_DriveMode_1_SHADE;
#define UART_TX_OUT_DriveMode_1Shadow (*(unsigned char*)&Port_2_DriveMode_1_SHADE)
